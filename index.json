[
{
	"uri": "http://docs.spiralcodestudio.com/_footer/",
	"title": "footer",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://docs.spiralcodestudio.com/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "Spiral Code Studio Documentation\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Welcome to Spiral Code Studio Documentation Defold Extensions These extensions are designed for Defold.\n Admob  Corona Plugins These plugins are designed for Solar2D - previous Corona SDK.\n Bluetooth Chrome Tabs Facebook Flashlight Microphone Mouse Cursor NFC QR Scanner SOX Text To Speech Toast Vibrator VK  "
},
{
	"uri": "http://docs.spiralcodestudio.com/extension/admob/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Admob Extension for Defold The Admob extension lets you display banner, interstitial and rewarded ads.\nImpressions Share There is NO impression share or revenue share.\nSample Project https://github.com/Lerg/extension-admob\nAPI Overview Functions  admob.enable_debug() admob.init() admob.load() admob.is_loaded() admob.hide_banner()  Events  admob  Project Settings To use this extension, you have to support me on Patreon with a 2nd or higher tier. You can become a patron here https://patreon.com/Lerg\nOnce you become a patron, I will send you an access key. Open game.project and these two entries to the dependencies property:\n https://build.spiralcodestudio.com/PATREON_EMAIL/ACCESS_KEY/defold/admob.zip https://static.spiralcodestudio.com/defold/admob_dep.zip  Replace PATREON_EMAIL with your Patreon email and ACCESS_KEY with the key I send you. E.g. https://build.spiralcodestudio.com/name@gmail.com/0123456789/defold/admob.zip\nThen select Project -\u0026gt; Fetch Libraries to download the extension in your project.\nYou need to set the AdMob App Id for your iOS and/or Android app in game.project. To do so open your game.project and add these lines:\n[admob] ios_app_id = ca-app-pub-***~*** android_app_id = ca-app-pub-***~*** Replace ca-app-pub-***~*** with your app ids. It can now be viewed or changed in the normal view of the game.project file.\nYou need Defold version 1.2.165+\nFunctions admob.enable_debug() Enables additional output for debugging purposes.\n admob.init(params) Initializes the extension. This function has to be called first, before using any other methods of the extension.\nparams required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ntest optional Boolean. If true, the test ads will be served. ALWAYS use test ads during the development.\nlistener optional Function. The callback function which receives all admob events.\nExample -- Banner id for iOS and Android. local banner_id = { [\u0026#39;iPhone OS\u0026#39;] = \u0026#39;ca-app-pub-3940256099942544/2934735716\u0026#39;, Android = \u0026#39;ca-app-pub-3940256099942544/6300978111\u0026#39; } local sysinfo = sys.get_sys_info() local function listener(event) print(\u0026#39;admob event type\u0026#39;, event.type) print(\u0026#39;admob event phase\u0026#39;, event.phase) if event.phase == \u0026#39;init\u0026#39; then -- Admob has been initialized, now it\u0026#39;s safe to load a banner. admob.load{ type = \u0026#39;banner\u0026#39;, id = banner_id[sysinfo.system_name], size = \u0026#39;smart\u0026#39;, position = \u0026#39;bottom\u0026#39;, keywords = {\u0026#39;puzzle\u0026#39;, \u0026#39;game\u0026#39;} } end end -- Init Admob. admob.init{ test = true, -- ALWAYS use test ads, only disable when submitting to the stores. listener = listener }  admob.load(params) Loads a specified ad unit. It also allows you to specify additional targeting parameters. To understand all of them please read targeting guides for iOS and Android.\nparams required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ntype optional String. Type of the ad unit: 'banner', 'interstitial' (default) or 'rewarded'.\nid required String. Ad unit id, e.g. 'ca-app-pub-3940256099942544/1033173712'.\nimmersive optional Boolean. If true, the video ad will hide onscreen navigation bar on Android.\nuser_id optional String. Sets the user ID to be used in server-to-server reward callbacks.\nkeywords optional Array. A set of string keywords to be used when an ad is being chosed. E.g. {'action', 'game'}. It may increase your revenue by displaying relevant ads.\ngender optional String. User gender: 'male' or 'female'.\nis_designed_for_families optional Boolean. Set it to true if your app is accepted as \u0026ldquo;Designed For Families\u0026rdquo;. Android only.\ntag_for_child_directed_treatment optional Boolean. For purposes of the Children\u0026rsquo;s Online Privacy Protection Act (COPPA), there is a setting called \u0026ldquo;tag for child-directed treatment\u0026rdquo;. By setting this to true, you certify that this notification is accurate and you are authorized to act on behalf of the owner of the app. You understand that abuse of this setting may result in termination of your Google account.\ntag_for_under_age_of_consent optional Boolean. See Users under the age of consent, default is false. iOS only for now.\nnon_personalized optional Boolean. Set it to true if you would like to request non-personalized ads. Under the Google EU User Consent Policy, you must make certain disclosures to your users in the European Economic Area (EEA) and obtain their consent to show personalized ads. This policy reflects the requirements of the EU ePrivacy Directive and the General Data Protection Regulation (GDPR).\nrestricted_data_processing optional Boolean. Set it to true if you would like to restrict data processing for compliance with the California Consumer Privacy Act (CCPA).\nmax_ad_content_rating optional String. AdMob returns ads with a content rating at or below the specified level. Possible values are: 'G', 'PG', 'T', 'MA'.\nbirthday optional Table. A table with three numeric components of a date: year, month and day. All fields are required. E.g. {year = 1970, month = 1, day = 1}.\nlocation optional Table. A table with three numeric components of a location: latitude, longitude and accuracy. All fields are required. E.g. {latitude = 59.3385206, longitude = 18.0303522, accuracy = 20}.\ncontent_url optional String. When requesting an ad, apps may pass the URL of the content they are serving. E.g. a blog post URL or a news URL that is being shown in your app.\nsize optional String. Banner size to load: 'banner' (default), 'large', 'medium', 'full', 'leaderboard', 'smart', 'smart_portrait' (iOS only), 'smart_landscape' (iOS only).\nSee \u0026ldquo;Banner sizes\u0026rdquo; section on Admob Android Banner and Admob iOS Banner pages for more details.\nIf a selected banner size can\u0026rsquo;t fit on screen, it won\u0026rsquo;t be displayed. A good option is to use the 'smart' banner size, in this case the actual size is adapted to the screen width.\nposition optional String. Banner position on screen: 'top' or 'bottom' (default).\nExample -- Load rewarded video ad. admob.load{ type = \u0026#39;rewarded\u0026#39;, id = \u0026#39;ca-app-pub-3940256099942544/5224354917\u0026#39;, immersive = true, keywords = {\u0026#39;action\u0026#39;, \u0026#39;game\u0026#39;} } -- Load banner ad. admob.load{ type = \u0026#39;banner\u0026#39;, id = \u0026#39;ca-app-pub-3940256099942544/6300978111\u0026#39;, size = \u0026#39;smart_portrait\u0026#39;, position = \u0026#39;top\u0026#39; }  admob.is_loaded(type) Returns true if the specified ad type has been loaded.\ntype required String. Which adverstiment type to check: 'banner', 'interstitial' or 'rewarded'.\nExample print(\u0026#39;Is an interstitial ad loaded? \u0026#39; .. (admob.is_loaded(\u0026#39;interstitial\u0026#39;) and \u0026#39;Yes\u0026#39; or \u0026#39;No\u0026#39;))  admob.show(type) Displays a loaded ads. Use admob.load() to load an ad before calling this method.\nYou can check if an ad has been loaded with admob.is_loaded() method or you can listen to the admob event with a loaded phase:\n-- Inside admob listener. if event.type == \u0026#39;interstitial\u0026#39; and event.phase == \u0026#39;loaded\u0026#39; then admob.show(\u0026#39;interstitial\u0026#39;) end Banners don\u0026rsquo;t need this method because they are displayed automatically when loaded.\ntype required String. Which adverstiment type to display: 'interstitial' or 'rewarded'.\nExample admob.show(\u0026#39;rewarded\u0026#39;)  admob.hide_banner() Removes a loaded banner from the screen.\n Events admob Occurs when something has happened with ad units or when the extension has been initialized.\nProperties Overview event.name event.is_error event.error_code event.error_message event.phase event.type Properties event.name The string 'admob'.\n event.is_error Boolean. true in case of an error.\n event.error_code Number. Unique error code, present when event.is_error is true, nil otherwise.\n event.error_message String. Description of an error when event.is_error is true, nil otherwise.\n event.phase String. Phase of an ad unit lifetime.\nPossible values depend on the ad type event.type.\nbanner  'closed' - banner ad is closed. 'failed_to_load' - banner ad request failed, is_error is true. 'left_application' - banner ad leaves the application (e.g., to go to the browser). 'loaded' - banner ad is loaded. 'opened' - banner ad is displayed.  interstitial  'closed' - interstitial ad is closed. 'failed_to_load' - interstitial ad request failed, is_error is true. 'left_application' - interstitial ad leaves the application (e.g., to go to the browser). 'loaded' - interstitial ad is loaded. 'opened' - interstitial ad is displayed.  rewarded  'closed' - video ad is closed. 'failed_to_load' - video ad request failed, is_error is true. 'left_application' - video ad leaves the application (e.g., to go to the browser). 'loaded' - video ad is loaded. 'opened' - video ad opens a overlay that covers the screen. 'rewarded' - video ad has triggered a reward. 'started' - video ad starts to play.   event.type String. indicates the ad unit type: 'banner', 'interstitial' or 'rewarded'. Or extension initialization - 'init'.\n Test Ads ALWAYS use test ads during the development. Only switch to the real ads for submitting to the stores. To enable test ads use test = true option in the admob.init() call.\nIf you use real ads during the development, your Admob account may be suspended.\nDemo If you just to want to test the extension, you can download it from github and use as a Defold project. It will function as a demo. You don\u0026rsquo;t need an Admob account for the demo.\nUsage Use admob.init() to initialize it when your app starts. A good place for that would be the init() function of some root game object. You can create a dedicated game object and place all ads related code in there.\nOnce the init process if finished (you can listen for the 'init' phase/type in the admob event or you can just wait), you can start loading ads. It\u0026rsquo;s good to preload ads before you actually need to display it. Use admob.load() to load and admob.show() to show the ads.\nWhen an ad has been closed (phase equals 'closed') you can preload next ad.\nBanners are displayed automatically when loaded, no need to call admob.show() for them, however to remove a banner, you would need to use admob.hide_banner().\nImpressions Share There is NO impression share or revenue share.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/abortReliableWrite/",
	"title": "abortReliableWrite",
	"tags": [],
	"description": "",
	"content": "object:abortReliableWrite()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:abortReliableWrite()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/",
	"title": "AccessToken",
	"tags": [],
	"description": "",
	"content": "AccessToken   Type Table\n  See also vk.*\n  Overview Represents a VK authorization token.\nProperties object.accessToken object.timestamp object.email object.expiresIn object.isHttpsRequired object.secret object.userId "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/accessToken/",
	"title": "accessToken",
	"tags": [],
	"description": "",
	"content": "object.accessToken   Type String\n  See also vk.*\n  Overview Access token value.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/addCharacteristic/",
	"title": "addCharacteristic",
	"tags": [],
	"description": "",
	"content": "object:addCharacteristic()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:addCharacteristic( characteristic )  characteristic required Characteristic.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/addDescriptor/",
	"title": "addDescriptor",
	"tags": [],
	"description": "",
	"content": "object:addDescriptor()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:addDescriptor( descriptor )  descriptor required Descriptor.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/address/",
	"title": "address",
	"tags": [],
	"description": "",
	"content": "object.address   Type String\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/addService/",
	"title": "addService",
	"tags": [],
	"description": "",
	"content": "object:addService()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:addService( service )  service required Service.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/addService/",
	"title": "addService",
	"tags": [],
	"description": "",
	"content": "object:addService()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:addService( service )  service required Service.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/AdvertiseData/",
	"title": "AdvertiseData",
	"tags": [],
	"description": "",
	"content": "AdvertiseData   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth advertising data.\nProperties object.manufacturers object.services object.includeDeviceName object.includeTxPowerLevel "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/",
	"title": "advertising",
	"tags": [],
	"description": "",
	"content": "advertising   Type Event\n  See also bluetooth.*\n  Overview Occurs when Bluetooth advertising has been started or failed to start.\nProperties event.name event.isError event.errorCode event.errorMessage event.mode event.timeout event.txPowerLevel "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/argument/",
	"title": "argument",
	"tags": [],
	"description": "",
	"content": "event.argument   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The argument bundle string. Android only.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/audio/",
	"title": "audio",
	"tags": [],
	"description": "",
	"content": "event.audio   Type String\n  Event onProgress\n  Platform Android\n  See also onProgress texttospeech.*\n  Overview A chunk of raw audio data that is going to be passed to the speech output.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/Image/baseDir/",
	"title": "baseDir",
	"tags": [],
	"description": "",
	"content": "object.baseDir   Type\tConstant\n  See also Image vk.*\n  Overview Directory constant corresponding to the base directory of the image file. Default value is system.ResourceDirectory unless specified otherwise where this object is used.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/beam/",
	"title": "beam",
	"tags": [],
	"description": "",
	"content": "nfc.beam()   Type Function\n  Return value none\n  Platform Android only\n  See also nfc.*\n  Overview Beam prepares the device for beaming an NDEF message to another device. The transfer starts when two devices are put near together.\nSyntax nfc.beam(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nmessage required NdefMessage. Contains NDEF message as an array of NDEF records.\nlistener required Listener. Listener which receives the beam event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/",
	"title": "beam",
	"tags": [],
	"description": "",
	"content": "beam   Type Event\n  See also nfc.*\n  Overview Occurs when the speech has been resumed after being paused.\nProperties event.name event.isError event.phase event.peerLlcpMajorVersion event.peerLlcpMinorVersion "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/beginReliableWrite/",
	"title": "beginReliableWrite",
	"tags": [],
	"description": "",
	"content": "object:beginReliableWrite()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:beginReliableWrite()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/",
	"title": "bluetooth",
	"tags": [],
	"description": "",
	"content": "bluetooth.* — Bluetooth   Type Library\n    Overview The Bluetooth plugin enables Bluetooth communication. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\n  This plugin is currently in beta. APIs and project configuration are subject to change without notice during this time.\n  This plugin is currently only available for Android, but iOS support is in development.\n  Syntax local bluetooth = require( \u0026quot;plugin.bluetooth\u0026quot; )  Properties bluetooth.isActive bluetooth.isScanning bluetooth.isMultipleAdvertisementSupported bluetooth.isOffloadedFilteringSupported bluetooth.isOffloadedScanBatchingSupported Functions bluetooth.init() bluetooth.setName() bluetooth.startScan() bluetooth.stopScan() bluetooth.connect() bluetooth.disconnect() bluetooth.newServer() bluetooth.startAdvertising() bluetooth.stopAdvertising() Events advertising init scan Types Gatt Characteristic Descriptor Server Service Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name, platforms) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} platforms = platforms or {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.bluetooth\u0026#39;] = spiralcodestudio_plugin(\u0026#39;bluetooth\u0026#39;, {\u0026#39;android\u0026#39;}) } } Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-bluetooth\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/cancel/",
	"title": "cancel",
	"tags": [],
	"description": "",
	"content": "vibrator.cancel()   Type Function\n  Return value none\n  See also vibrator.*\n  Overview Cancels the currently ongoing vibration.\nSyntax vibrator.cancel() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/cancelBeam/",
	"title": "cancelBeam",
	"tags": [],
	"description": "",
	"content": "nfc.cancelBeam()   Type Function\n  Return value none\n  Platform Android only\n  See also nfc.*\n  Overview Cancels any previously prepared with nfc.beam() message.\nSyntax nfc.cancelBeam() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/cancelConnection/",
	"title": "cancelConnection",
	"tags": [],
	"description": "",
	"content": "object:cancelConnection()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:cancelConnection( device )  device required Device.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/",
	"title": "Characteristic",
	"tags": [],
	"description": "",
	"content": "Characteristic   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth GATT Characteristic.\nProperties object.id object.uuid object.permissions object.properties Functions object.addDescriptor() object.getDescriptor() object.getDescriptors() object.getService() object.getFloatValue() object.getIntValue() object.getStringValue() object.getValue() object.setFloatValue() object.setIntValue() object.setStringValue() object.setValue() object.getWriteType() object.setWriteType() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicChanged/characteristic/",
	"title": "characteristic",
	"tags": [],
	"description": "",
	"content": "event.characteristic   Type Characteristic Event onCharacteristicChanged\n  See also onCharacteristicChanged bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/characteristic/",
	"title": "characteristic",
	"tags": [],
	"description": "",
	"content": "event.characteristic   Type Characteristic Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/characteristic/",
	"title": "characteristic",
	"tags": [],
	"description": "",
	"content": "event.characteristic   Type Characteristic Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/characteristic/",
	"title": "characteristic",
	"tags": [],
	"description": "",
	"content": "event.characteristic   Type Characteristic Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/characteristic/",
	"title": "characteristic",
	"tags": [],
	"description": "",
	"content": "event.characteristic   Type Characteristic Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/",
	"title": "chrometabs",
	"tags": [],
	"description": "",
	"content": "chrometabs.* — chrometabs   Type Library\n  Overview The Chrometabs plugin adds support for Chrome Custom Tabs - a better replacement for WebView on Android. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: Android 7.0+.\nSyntax local chrometabs = require(\u0026#39;plugin.chrometabs\u0026#39;) Functions chrometabs.init() chrometabs.show() chrometabs.warmup() chrometabs.newSession() chrometabs.mayLaunchUrl() Events chrometabs Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.chrometabs\u0026#39;] = spiralcodestudio_plugin(\u0026#39;chrometabs\u0026#39;) } } Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-chrometabs\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/chrometabs/",
	"title": "chrometabs",
	"tags": [],
	"description": "",
	"content": "chrometabs   Type Event\n  See also chrometabs.*\n  Overview Contains information about fetched deferered app link. If no link is found, isError would be true.\nOn iOS only url field is available along with name and isError.\nProperties event.name event.phase event.isError event.errorMessage "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/class/",
	"title": "class",
	"tags": [],
	"description": "",
	"content": "object.class   Type String\n  See also bluetooth.*\n  Overview \u0026quot;audio video camcorder\u0026quot;, \u0026quot;audio video car audio\u0026quot;, \u0026quot;audio video handsfree\u0026quot;, \u0026quot;audio video headphones\u0026quot;, \u0026quot;audio video hifi audio\u0026quot;, \u0026quot;audio video loudspeaker\u0026quot;, \u0026quot;audio video microphone\u0026quot;, \u0026quot;audio video portable audio\u0026quot;, \u0026quot;audio video set top box\u0026quot;, \u0026quot;audio video uncategorized\u0026quot;, \u0026quot;audio video vcr\u0026quot;, \u0026quot;audio video video camera\u0026quot;, \u0026quot;audio video video conferencing\u0026quot;, \u0026quot;audio video ideo display and loudspeaker\u0026quot;, \u0026quot;audio video video gaming toy\u0026quot;, \u0026quot;audio video video monitor\u0026quot;, \u0026quot;audio video wearable headset\u0026quot;, \u0026quot;computer desktop\u0026quot;, \u0026quot;computer handheld pc pda\u0026quot;, \u0026quot;computer laptop\u0026quot;, \u0026quot;computer palm size pc pda\u0026quot;, \u0026quot;computer server\u0026quot;, \u0026quot;computer uncategorized\u0026quot;, \u0026quot;computer wearable\u0026quot;, \u0026quot;health blood pressure\u0026quot;, \u0026quot;health data display\u0026quot;, \u0026quot;health glucose\u0026quot;, \u0026quot;health pulse oximeter\u0026quot;, \u0026quot;health pulse rate\u0026quot;, \u0026quot;health thermometer\u0026quot;, \u0026quot;health uncategorized\u0026quot;, \u0026quot;health weighing\u0026quot;, \u0026quot;phone cellular\u0026quot;, \u0026quot;phone cordless\u0026quot;, \u0026quot;phone isdn\u0026quot;, \u0026quot;phone modem or gateway\u0026quot;, \u0026quot;phone smart\u0026quot;, \u0026quot;phone uncategorized\u0026quot;, \u0026quot;toy controller\u0026quot;, \u0026quot;toy doll action figure\u0026quot;, \u0026quot;toy game\u0026quot;, \u0026quot;toy robot\u0026quot;, \u0026quot;toy uncategorized\u0026quot;, \u0026quot;toy vehicle\u0026quot;, \u0026quot;wearable glasses\u0026quot;, \u0026quot;wearable helmet\u0026quot;, \u0026quot;wearable jacket\u0026quot;, \u0026quot;wearable pager\u0026quot;, \u0026quot;wearable uncategorized\u0026quot;, \u0026quot;wearable wrist watch\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/clearServices/",
	"title": "clearServices",
	"tags": [],
	"description": "",
	"content": "object:clearServices()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:clearServices()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/close/",
	"title": "close",
	"tags": [],
	"description": "",
	"content": "object:close()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:close()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/close/",
	"title": "close",
	"tags": [],
	"description": "",
	"content": "nfc.close()   Type Function\n  Return value none\n  Platform iOS only\n  See also nfc.*\n  Overview Closes an opened NFC reading dialog.\nSyntax nfc.close() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/connect/",
	"title": "connect",
	"tags": [],
	"description": "",
	"content": "bluetooth.connect()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.connect( params )  params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ndevice required Device.\nautoConnect optional Boolean. default is false.\nonCharacteristicChanged optional Listener.\nonCharacteristicRead optional Listener.\nonCharacteristicWrite optional Listener.\nonConnectionStateChange optional Listener.\nonDescriptorRead optional Listener.\nonDescriptorWrite optional Listener.\nonReadRemoteRssi optional Listener.\nonReliableWriteCompleted optional Listener.\nonServicesDiscovered optional Listener.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/connect/",
	"title": "connect",
	"tags": [],
	"description": "",
	"content": "object:connect()   Type Function Return value Gatt\n  See also bluetooth.*\n  Overview Syntax object:connect( params )  params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nautoConnect optional Boolean. default is false.\nonCharacteristicChanged optional Listener.\nonCharacteristicRead optional Listener.\nonCharacteristicWrite optional Listener.\nonConnectionStateChange optional Listener.\nonDescriptorRead optional Listener.\nonDescriptorWrite optional Listener.\nonReadRemoteRssi optional Listener.\nonReliableWriteCompleted optional Listener.\nonServicesDiscovered optional Listener.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/connect/",
	"title": "connect",
	"tags": [],
	"description": "",
	"content": "object:connect()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:connect()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/connect/",
	"title": "connect",
	"tags": [],
	"description": "",
	"content": "object:connect()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:connect( device, [autoconnect] )  device required Device.\nautoconnect optional Boolean.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/continue/",
	"title": "continue",
	"tags": [],
	"description": "",
	"content": "texttospeech.continue()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Resumes a previous paused speech.\nSyntax texttospeech.continue() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/count/",
	"title": "count",
	"tags": [],
	"description": "",
	"content": "event.count   Type Integer\n  Event onProgress\n  Platform Not Android\n  See also onProgress texttospeech.*\n  Overview The number of characters of the substring from the passed text, that is currently being processed.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/createBond/",
	"title": "createBond",
	"tags": [],
	"description": "",
	"content": "object:createBond()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:createBond()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/credits/",
	"title": "Credits",
	"tags": [],
	"description": "contributors and packages used by hugo-theme-docdock",
	"content": ""
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/type/Cursor/",
	"title": "Cursor",
	"tags": [],
	"description": "",
	"content": "Cursor   Type Table\n  See also mousecursor.*\n  Overview Represents a mouse cursor instance.\nFunctions object:show() object:hide() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/defaultEngine/",
	"title": "defaultEngine",
	"tags": [],
	"description": "",
	"content": "event.defaultEngine   Type String\n  Event init\n  Platform Android\n  See also init texttospeech.*\n  Overview The identifier of the default engine.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/extension/",
	"title": "Defold Extensions",
	"tags": [],
	"description": "",
	"content": "Extensions These extensions are designed for Defold.\n Admob  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/",
	"title": "Descriptor",
	"tags": [],
	"description": "",
	"content": "Descriptor   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth GATT Descriptor.\nProperties object.uuid object.permissions Functions object.getCharacteristic() object.getValue() object.setValue() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/descriptor/",
	"title": "descriptor",
	"tags": [],
	"description": "",
	"content": "event.descriptor   Type Descriptor Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/descriptor/",
	"title": "descriptor",
	"tags": [],
	"description": "",
	"content": "event.descriptor   Type Descriptor Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/descriptor/",
	"title": "descriptor",
	"tags": [],
	"description": "",
	"content": "event.descriptor   Type Descriptor Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/descriptor/",
	"title": "descriptor",
	"tags": [],
	"description": "",
	"content": "event.descriptor   Type Descriptor Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/",
	"title": "Device",
	"tags": [],
	"description": "",
	"content": "Device   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth device.\nProperties object.address object.class object.majorClass object.name object.type object.uuids Functions object.getBondState() object.setPairingConfirmation() object.setPin() object.createBond() object.connect() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event scan\n  See also scan bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onExecuteWrite\n  See also onExecuteWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onMtuChanged/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onMtuChanged\n  See also onMtuChanged bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onNotificationSent\n  See also onNotificationSent bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/device/",
	"title": "device",
	"tags": [],
	"description": "",
	"content": "event.device   Type Device Event onServiceAdded\n  See also onServiceAdded bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/disconnect/",
	"title": "disconnect",
	"tags": [],
	"description": "",
	"content": "bluetooth.disconnect()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.disconnect( address )  address required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/disconnect/",
	"title": "disconnect",
	"tags": [],
	"description": "",
	"content": "object:disconnect()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:disconnect()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/discoverServices/",
	"title": "discoverServices",
	"tags": [],
	"description": "",
	"content": "object:discoverServices()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:discoverServices()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/showcase/",
	"title": "Docdock-built Sites",
	"tags": [],
	"description": "Hugo-built Sites with docdock theme",
	"content": "https://invincible.site/ by @shazic https://bitfan.io/ by @vjeantet "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/email/",
	"title": "email",
	"tags": [],
	"description": "",
	"content": "object.email   Type String\n  See also vk.*\n  Overview User email if available. Can be nil.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/enableDebug/",
	"title": "enableDebug",
	"tags": [],
	"description": "",
	"content": "mousecursor.enableDebug()   Type Function\n  Return value none\n  See also mousecursor.*\n  Overview Enables additional output for debugging purposes.\nSyntax mousecursor.enableDebug() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/enableDebug/",
	"title": "enableDebug",
	"tags": [],
	"description": "",
	"content": "nfc.enableDebug()   Type Function\n  Return value none\n  See also nfc.*\n  Overview Enables additional output for debugging purposes.\nSyntax nfc.enableDebug() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/enableDebug/",
	"title": "enableDebug",
	"tags": [],
	"description": "",
	"content": "qrscanner.enableDebug()   Type Function\n  Return value none\n  See also qrscanner.*\n  Overview Enables additional output for debugging purposes.\nSyntax qrscanner.enableDebug() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/enableDebug/",
	"title": "enableDebug",
	"tags": [],
	"description": "",
	"content": "texttospeech.enableDebug()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Enables additional output for debugging purposes.\nSyntax texttospeech.enableDebug() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/enableDebug/",
	"title": "enableDebug",
	"tags": [],
	"description": "",
	"content": "vk.enableDebug()   Type Function\n  Return value none\n  See also vk.*\n  Overview Enables additional output for debugging purposes.\nSyntax vk.enableDebug() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/engines/",
	"title": "engines",
	"tags": [],
	"description": "",
	"content": "event.engines   Type Table\n  Event init\n  Platform Android\n  See also init texttospeech.*\n  Overview The list of available engines. Keys are engine names, values are engine identifiers.\nSample output { [\u0026#39;Google Text-to-speech Engine\u0026#39;] = \u0026#39;com.google.android.tts\u0026#39;, [\u0026#39;Pico TTS\u0026#39;] = \u0026#39;com.svox.pico\u0026#39; } "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event advertising\n  See also advertising bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/init/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event init\n  See also init bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onReliableWriteCompleted\n  See also onReliableWriteCompleted bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onServicesDiscovered\n  See also onServicesDiscovered bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onNotificationSent\n  See also onNotificationSent bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number Event onServiceAdded\n  See also onServiceAdded bluetooth.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/init/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event init\n  See also init nfc.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\nPossible values:\n 'no nfc' 'nfc disabled'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event nfc\n  See also nfc nfc.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\nOn iOS closing the NFC reading dialog generates an error event, but it should not be treated as an error, just a notification of a closed dialog.\niOS values  'nfcreader_unsupported_feature' 'nfcreader_security_violation' 'nfcreader_transceive_tag_connection_lost' 'nfcreader_transceive_retry_exceeded' 'nfcreader_transceive_tag_response_error' 'nfcreader_session_invalidation_user_canceled' 'nfcreader_session_invalidation_session_timeout' 'nfcreader_session_invalidation_terminated_unexpectedly' 'nfcreader_session_invalidation_system_is_busy' 'nfcreader_session_invalidation_first_ndef_tag_read' 'nfctag_command_configuration_invalid_parameters'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/writeTag/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event writeTag\n  See also writeTag nfc.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\nPossible values:\n 'not writable' 'no space' 'write fail' 'bad format' 'unknown' 'no records' 'no tag'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event show\n  See also show qrscanner.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\nPossible values:\n 'cancelled' 'no_camera' 'permission_denied' 'permission_denied_should_never_ask_again' 'unknown'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event init\n  See also init texttospeech.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event onComplete\n  See also onComplete texttospeech.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/login/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event login\n  See also login vk.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event request\n  See also request vk.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/showShareDialog/errorCode/",
	"title": "errorCode",
	"tags": [],
	"description": "",
	"content": "event.errorCode   Type Number\n  Event showShareDialog\n  See also showShareDialog vk.*\n  Overview Unique error code, present when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event advertising\n  See also advertising bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/init/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event init\n  See also init bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview String description of an error when [event.isError]/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/isError) is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onReliableWriteCompleted\n  See also onReliableWriteCompleted bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onServicesDiscovered\n  See also onServicesDiscovered bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onNotificationSent\n  See also onNotificationSent bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String Event onServiceAdded\n  See also onServiceAdded bluetooth.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/chrometabs/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event chrometabs\n  See also chrometabs chrometabs.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview String description of an error when event.isError is true, nil otherwise or if there is simply no app link found.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/init/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event init\n  See also init nfc.*\n  Overview String description of an error when event.isError is true, nil otherwise.\nPossible values:\n 'This device does not have NFC support.' 'NFC is disabled.'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event nfc\n  See also nfc nfc.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/writeTag/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event writeTag\n  See also writeTag nfc.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event show\n  See also show qrscanner.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event init\n  See also init texttospeech.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event onComplete\n  See also onComplete texttospeech.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/login/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event login\n  See also login vk.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event request\n  See also request vk.*\n  Overview String description of an error when event.isError is true, nil otherwise.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/showShareDialog/errorMessage/",
	"title": "errorMessage",
	"tags": [],
	"description": "",
	"content": "event.errorMessage   Type String\n  Event showShareDialog\n  See also showShareDialog vk.*\n  Overview String description of an error when event.isError is true, nil otherwise.\nIf the user cancelled the action, the string will be 'cancelled'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  advertising init scan  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  chrometabs  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  fbapplink  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  init nfc writeTag beam  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  show  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  init getLanguagesAndVoices onStart onProgress onComplete onPause onContinue  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/",
	"title": "Events",
	"tags": [],
	"description": "",
	"content": "Events  login request showShareDialog  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/executeReliableWrite/",
	"title": "executeReliableWrite",
	"tags": [],
	"description": "",
	"content": "object:executeReliableWrite()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:executeReliableWrite()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/expiresIn/",
	"title": "expiresIn",
	"tags": [],
	"description": "",
	"content": "object.expiresIn   Type String\n  See also vk.*\n  Overview UNIX timestamp of the time when the access token will expire.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/",
	"title": "facebook",
	"tags": [],
	"description": "",
	"content": "facebook.* — facebook   Type Library\n  Overview The Facebook plugin integrates the Facebook SDK version 5.0.1, currently only analytics and deferred applinks are implemented. This plugin is incompatible with the standard facebook.v4 plugin by Corona Labs. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nIt is advised to get familiar with official Facebook SDK documentation.\nIf you need other SDK features to be implemented in this plugin, you can contact me and sponsor the development.\nSupported platforms: iOS 8+, Android 4.0.3+.\nSyntax local facebook = require(\u0026#39;plugin.spiralcode.facebook\u0026#39;) Functions facebook.init() facebook.getDeferredAppLinkData() facebook.logEvent() facebook.logPurchase() facebook.setLimitEventAndDataUsage() Events fbapplink Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.spiralcode.facebook\u0026#39;] = spiralcodestudio_plugin(\u0026#39;facebook\u0026#39;) } } iOS If your app is for iOS, you must also include the following code in build.settings to ensure that the native Facebook app functions properly:\nsettings = { iphone = { plist = { UIApplicationExitsOnSuspend = false, FacebookAppID = 'XXXXXXXXXX', -- Replace XXXXXXXXXX with your Facebook App ID CFBundleURLTypes = { { CFBundleURLSchemes = { 'fbXXXXXXXXXX', } } -- Replace XXXXXXXXXX with your Facebook App ID }, -- Whitelist Facebook apps LSApplicationQueriesSchemes = { 'fb', 'fbapi', 'fbauth2', 'fb-messenger-api', 'fbshareextension' }, }, }, } Notice that there are several critical parts which must be specified:\nUIApplicationExitsOnSuspend — To ensure that Facebook can resume your app properly, you must include UIApplicationExitsOnSuspend = false. If you\u0026rsquo;ve set this parameter to true for some other reason, you must revert it to false (default).\nFacebookAppID — Set this key to FacebookAppID = \u0026lsquo;XXXXXXXXXX\u0026rsquo; and replace XXXXXXXXXX with your unique Facebook App ID.\nCFBundleURLTypes — The CFBundleURLTypes table must be declared exactly as shown and it must include a table named CFBundleURLSchemes. Inside this, include your Facebook App ID and prefix it with fb. Thus, if your App ID is 1234567890, you should specify: 'fb1234567890'.\nLSApplicationQueriesSchemes — This table of whitelisted URL schemes ensures that your app and the Facebook SDK run properly together.\nAndroid If your app is for Android, you must also include a Facebook App ID in build.settings:\nsettings = { android = { facebookAppId = 'XXXXXXXXXX', -- Replace XXXXXXXXXX with your Facebook App ID }, } Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-facebook\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/flashlight/off/",
	"title": "false",
	"tags": [],
	"description": "",
	"content": "flashlight.off()   Type Function\n  Return value none\n  See also toast.*\n  Overview Turns off the flashlight.\nSyntax flashlight.off() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/",
	"title": "fbapplink",
	"tags": [],
	"description": "",
	"content": "fbapplink   Type Event\n  See also facebook.*\n  Overview Contains information about fetched deferered app link. If no link is found, isError would be true.\nOn iOS only url field is available along with name and isError.\nProperties event.name event.isError event.url event.promotionCode event.argument event.referer event.ref Sample data Here is how the event table looks like on iOS and Android for testdeeplink://deep url and some random promotion code.\niOS { name = 'fbapplink', isError = false, url = 'testdeeplink://deep?al_applink_data=%7B%22target_url%22%3A%22testdeeplink%3A%5C%2F%5C%2Fdeep%22%2C%22extras%22%3A%7B%22fb_app_id%22%3A616336078377449%2C%22deeplink_context%22%3A%22%7B%5C%22promo_code%5C%22%3A%5C%22sadasd%5C%22%7D%22%7D%7D' } Android { name = 'fbapplink', isError = false, argument = 'Bundle[{com.facebook.platform.APPLINK_NATIVE_CLASS=, extras=Bundle[{deeplink_context=Bundle[{promo_code=sdfdsfdsf15}]}], target_url=testdeeplink://deep, com.facebook.platform.APPLINK_NATIVE_URL=testdeeplink://deep}]', promotionCode = 'sdfdsfdsf15', url = 'testdeeplink://deep' } "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/Image/filename/",
	"title": "filename",
	"tags": [],
	"description": "",
	"content": "object.filename   Type String\n  See also Image vk.*\n  Overview String representing the file path for the image.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/flashlight/",
	"title": "flashlight",
	"tags": [],
	"description": "",
	"content": "flashlight.* — Flashlight   Type Library\n  Overview The Flashlight plugin provides access to the flash LED light source, which can be used as a torch. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: iOS 6+ and Android 3.0+.\nSyntax local flashlight = require(\u0026#39;plugin.flashlight\u0026#39;) Functions flashlight.on() flashlight.off() Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.flashlight\u0026#39;] = spiralcodestudio_plugin(\u0026#39;flashlight\u0026#39;) } } Example local flashlight = require(\u0026#39;plugin.flashlight\u0026#39;) -- -- -- flashlight.on() Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-flashlight\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/type/Float/",
	"title": "Float",
	"tags": [],
	"description": "",
	"content": "Float   Type Float\n  See also Number\n  Overview A floating point number. Under the hood it is the Number type, the difference is only semantic.\nlocal n1 = 0.5 local n2 = math.pi local n3 = 5.12e-4 "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/",
	"title": "Gatt",
	"tags": [],
	"description": "",
	"content": "Gatt   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth GATT.\nFunctions object.abortReliableWrite() object.beginReliableWrite() object.connect() object.disconnect() object.discoverServices() object.executeReliableWrite() object.getService() object.getServices() object.readCharacteristic() object.readDescriptor() object.readRemoteRssi() object.requestConnectionPriority() object.requestMtu() object.setCharacteristicNotification() object.writeCharacteristic() object.writeDescriptor() Events onCharacteristicChanged onCharacteristicRead onCharacteristicWrite onConnectionStateChange onDescriptorRead onDescriptorWrite onReadRemoteRssi onReliableWriteCompleted onServicesDiscovered "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicChanged/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onCharacteristicChanged\n  See also onCharacteristicChanged bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onReliableWriteCompleted\n  See also onReliableWriteCompleted bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/gatt/",
	"title": "gatt",
	"tags": [],
	"description": "",
	"content": "event.gatt   Type Gatt Event onServicesDiscovered\n  See also onServicesDiscovered bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/getAccessToken/",
	"title": "getAccessToken",
	"tags": [],
	"description": "",
	"content": "vk.getAccessToken()   Type Function\n  Return value AccessToken\n  See also vk.*\n  Overview Returns authorization token information for the currently logged in user.\nSyntax vk.getAccessToken() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/getBondState/",
	"title": "getBondState",
	"tags": [],
	"description": "",
	"content": "object:getBondState()   Type Function Return value String\n  See also bluetooth.*\n  Overview Syntax object:getBondState()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/getCharacteristic/",
	"title": "getCharacteristic",
	"tags": [],
	"description": "",
	"content": "object:getCharacteristic()   Type Function Return value Characteristic\n  See also bluetooth.*\n  Overview Syntax object:getCharacteristic()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/getCharacteristic/",
	"title": "getCharacteristic",
	"tags": [],
	"description": "",
	"content": "object:getCharacteristic()   Type Function Return value Characteristic\n  See also bluetooth.*\n  Overview Syntax object:getCharacteristic( uuid )  uuid required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/getCharacteristics/",
	"title": "getCharacteristics",
	"tags": [],
	"description": "",
	"content": "object:getCharacteristics()   Type Function Return value Array\n  See also bluetooth.*\n  Overview Syntax object:getCharacteristics() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/getDeferredAppLinkData/",
	"title": "getDeferredAppLinkData",
	"tags": [],
	"description": "",
	"content": "facebook.getDeferredAppLinkData()   Type Function\n  Return value none\n  See also facebook.*\n  Overview Asynchronously fetches app link information that might have been stored for use after installation of the app.\nSyntax facebook.getDeferredAppLinkData(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nlistener required Listener. The listener receices the fbapplink event containing the deferred url.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getDescriptor/",
	"title": "getDescriptor",
	"tags": [],
	"description": "",
	"content": "object:getDescriptor()   Type Function Return value Descriptor\n  See also bluetooth.*\n  Overview Syntax object:getDescriptor( uuid )  uuid required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getDescriptors/",
	"title": "getDescriptors",
	"tags": [],
	"description": "",
	"content": "object:getDescriptors()   Type Function Return value Array\n  See also bluetooth.*\n  Overview Syntax object:getDescriptors()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getFloatValue/",
	"title": "getFloatValue",
	"tags": [],
	"description": "",
	"content": "object:getFloatValue()   Type Function Return value Number\n  See also bluetooth.*\n  Overview Syntax object:getFloatValue( [format], [offset] )  format optional String. \u0026quot;float\u0026quot; or \u0026quot;sfloat\u0026quot; (default).\noffset optional Number. Integer, default is 0.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/getIncludedServices/",
	"title": "getIncludedServices",
	"tags": [],
	"description": "",
	"content": "object:getIncludedServices()   Type Function Return value Array\n  See also bluetooth.*\n  Overview Syntax object:getIncludedServices() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getIntValue/",
	"title": "getIntValue",
	"tags": [],
	"description": "",
	"content": "object:getIntValue()   Type Function Return value Number\n  See also bluetooth.*\n  Overview Returns integer.\nSyntax object:getIntValue( [format], [offset] )  format optional String. \u0026quot;sint8\u0026quot;, \u0026quot;sint16\u0026quot;, \u0026quot;sint32\u0026quot; (default), \u0026quot;uint8\u0026quot;, \u0026quot;uint16\u0026quot; or \u0026quot;uint32\u0026quot;.\noffset optional Number. Integer, default is 0.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/",
	"title": "getLanguagesAndVoices",
	"tags": [],
	"description": "",
	"content": "getLanguagesAndVoices   Type Event\n  See also texttospeech.*\n  Overview Delivers lists of available languages and voices.\nProperties event.name event.isError event.errorMessage event.errorCode event.languages event.voices "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/getLanguagesAndVoices/",
	"title": "getLanguagesAndVoices",
	"tags": [],
	"description": "",
	"content": "texttospeech.getLanguagesAndVoices()   Type Function\n  Return value getLanguagesAndVoices\n  See also texttospeech.*\n  Overview Returns the getLanguagesAndVoices event with a list of available languages and voices.\nSyntax texttospeech.getLanguagesAndVoices() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getService/",
	"title": "getService",
	"tags": [],
	"description": "",
	"content": "object:getService()   Type Function Return value Service\n  See also bluetooth.*\n  Overview Syntax object:getService()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/getService/",
	"title": "getService",
	"tags": [],
	"description": "",
	"content": "object:getService()   Type Function Return value Service\n  See also bluetooth.*\n  Overview Syntax object:getService( uuid )  uuid required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/getService/",
	"title": "getService",
	"tags": [],
	"description": "",
	"content": "object:getService()   Type Function Return value Service\n  See also bluetooth.*\n  Overview Syntax object:getService( uuid )  uuid required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/getServices/",
	"title": "getServices",
	"tags": [],
	"description": "",
	"content": "object:getServices()   Type Function Return value Array\n  See also bluetooth.*\n  Overview Syntax object:getServices() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/getServices/",
	"title": "getServices",
	"tags": [],
	"description": "",
	"content": "object:getServices()   Type Function Return value Array\n  See also bluetooth.*\n  Overview Syntax object:getServices() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getStringValue/",
	"title": "getStringValue",
	"tags": [],
	"description": "",
	"content": "object:getStringValue()   Type Function Return value String\n  See also bluetooth.*\n  Overview Syntax object:getStringValue( [offset] )  offset optional Number. Integer, default is 0.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/getUserId/",
	"title": "getUserId",
	"tags": [],
	"description": "",
	"content": "vk.getUserId()   Type Function\n  Return value String\n  See also vk.*\n  Overview Returns VK id of the currently logged in user.\nSyntax vk.getUserId() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getValue/",
	"title": "getValue",
	"tags": [],
	"description": "",
	"content": "object:getValue()   Type Function Return value String\n  See also bluetooth.*\n  Overview Syntax object:getValue()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/getValue/",
	"title": "getValue",
	"tags": [],
	"description": "",
	"content": "object:getValue()   Type Function Return value String\n  See also bluetooth.*\n  Overview Syntax object:getValue()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/getWriteType/",
	"title": "getWriteType",
	"tags": [],
	"description": "",
	"content": "object:getWriteType()   Type Function Return value String\n  See also bluetooth.*\n  Overview \u0026quot;default\u0026quot;, \u0026quot;no response\u0026quot; or \u0026quot;signed\u0026quot;.\nSyntax object:getWriteType() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/type/Haptic/",
	"title": "Haptic",
	"tags": [],
	"description": "",
	"content": "Haptic   Type Table\n  See also vibrator.*\n  Overview Provides the direct access to the Apple\u0026rsquo;s Taptic Engine. iOS only.\nFor more details on that API please refer to the Apple\u0026rsquo;s Reference.\nFunctions haptic:prepare() haptic:invoke() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/hasVibrator/",
	"title": "hasVibrator",
	"tags": [],
	"description": "",
	"content": "vibrator.hasVibrator()   Type Function\n  Return value Boolean\n  See also vibrator.*\n  Overview Returns true if vibrator is present. On iOS it checks if the Taptic Engine API exists, that would be true on all iOS 10 devices, however currently only iPhone 7 and iPhone 7 Plus or later can actually vibrate.\nSyntax vibrator.hasVibrator() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/hide/",
	"title": "hide",
	"tags": [],
	"description": "",
	"content": "mousecursor.hide()   Type Function\n  Return value none\n  See also mousecursor.*\n  Overview Disables mouse cursor. It becomes invisible.\nSyntax mousecursor.hide() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/type/Cursor/hide/",
	"title": "hide",
	"tags": [],
	"description": "",
	"content": "object:hide()   Type Function\n  Return value none\n  See also mousecursor.*\n  Overview Makes a visible cursor hidden. On Windows instead of disappearing, cursor resets to the arrow.\nSyntax object:hide() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "object.id   Type Number\n  See also bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "object.id   Type Number\n  See also bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event nfc\n  See also nfc nfc.*\n  Overview Optional TAG id.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event onComplete\n  See also onComplete texttospeech.*\n  Overview The speech identifier. The value that has been supplied to texttospeech.speak().\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onContinue/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event onContinue\n  See also onContinue texttospeech.*\n  Overview The speech identifier. The value that has been supplied to texttospeech.speak().\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onPause/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event onPause\n  See also onPause texttospeech.*\n  Overview The speech identifier. The value that has been supplied to texttospeech.speak().\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event onProgress\n  See also onProgress texttospeech.*\n  Overview The speech identifier. The value that has been supplied to texttospeech.speak().\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onStart/id/",
	"title": "id",
	"tags": [],
	"description": "",
	"content": "event.id   Type String\n  Event onStart\n  See also onStart texttospeech.*\n  Overview The speech identifier. The value that has been supplied to texttospeech.speak().\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/Image/",
	"title": "Image",
	"tags": [],
	"description": "",
	"content": "Image   Type Table\n  See also vk.*\n  Overview Represents image file information.\nProperties object.filename object.baseDir "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/AdvertiseData/includeDeviceName/",
	"title": "includeDeviceName",
	"tags": [],
	"description": "",
	"content": "object.includeDeviceName   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/AdvertiseData/includeTxPowerLevel/",
	"title": "includeTxPowerLevel",
	"tags": [],
	"description": "",
	"content": "object.includeTxPowerLevel   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "init   Type Event\n  See also bluetooth.*\n  Overview Occurs during the initialization process of the plugin.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "bluetooth.init()   Type Function Return value none\n  See also bluetooth.*\n  Overview Initializes the plugin and calls the specified listener function to notify when the process is complete, or to provide error information.\nThis call is required and must be executed before making other calls such as bluetooth.startScan().\nSyntax bluetooth.init( [listener] ) listener optional Listener. Listener function which receives an init event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "chrometabs.init()   Type Function\n  Return value none\n  See also chrometabs.*\n  Overview The plugin does not require initialization, you can invoke chrometabs.show() straight away, but initialization helps preloading assets and reduces showing delay.\nSyntax chrometabs.init([params]) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nlistener optional Boolean. Listener that receives chrometabs event. Use it to know when the plugin is ready to invoke chrometabs.warmup() or chrometabs.newSession() calls.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "facebook.init()   Type Function\n  Return value none\n  See also facebook.*\n  Overview Must be callled before you try to use the plugin.\nSyntax facebook.init([params]) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nautoLogAppEvents optional Boolean. Controls the auto logging of basic app events, such as activateApp and deactivateApp. In some cases, you want to only delay the collection of automatically logged events, such as to obtain User consent or fulfill legal obligations. Default is false.\nadvertiserIdCollection optional Boolean. Controls the collection of advertiser_id. In some cases, you want to delay the collection of advertiser_id, such as to obtain User consent or fulfill legal obligations, instead of disabling it. Default is false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "init   Type Event\n  See also nfc.*\n  Overview Occurs during the initialization process of the plugin.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "nfc.init()   Type Function\n  Return value none\n  See also nfc.*\n  Overview Initializes the NFC subsystem.\nSyntax nfc.init(listener) listener required Listener. Listener which receives the init event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "init   Type Event\n  See also texttospeech.*\n  Overview Occurs during the initialization process of the plugin.\nProperties event.name event.isError event.errorMessage event.errorCode event.engines event.defaultEngine event.maxLength "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "texttospeech.init()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Must be callled before you try to synthesize any audio.\nSyntax 1 texttospeech.init([listener]) listener optional Listener. Listener which receives the init event.\nSyntax 2 texttospeech.init([params]) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nengine optional~(Android)~ String. Speech engine identifier. If supplied, the specified engine will be loaded. Call texttospeech.init() again to change the engine.\nlistener optional Listener. Listener which receives the init event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/init/",
	"title": "init",
	"tags": [],
	"description": "",
	"content": "vk.init()   Type Function\n  Return value none\n  See also vk.*\n  Overview Must be callled before you can use other functions of the plugin.\nSyntax vk.init(appId, [permissions]) appId required String. VK application ID that you get on https://vk.com/dev.\npermissions optional Array. Array of strings. Specify VK permissions that your application needs.\nAvailable permissions 'notify', 'friends', 'photos', 'audio', 'video', 'docs', 'notes', 'pages', 'status', 'wall', 'groups', 'messages', 'notifications', 'stats', 'ads', 'offline', 'direct', 'email'.\n'email' permission is only granted to special applications that have an agreement with VK company.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/type/Integer/",
	"title": "Integer",
	"tags": [],
	"description": "",
	"content": "Integer   Type Float\n  See also Number\n  Overview An integer number. Under the hood it is the Number type, the difference is only semantic.\nlocal n1 = 1 local n2 = 25 local n3 = 2e+8 "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/intentType/",
	"title": "intentType",
	"tags": [],
	"description": "",
	"content": "event.intentType   Type String\n  Event nfc\n  See also nfc nfc.*\n  Overview Optional Android intent type.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/type/Haptic/invoke/",
	"title": "invoke",
	"tags": [],
	"description": "",
	"content": "haptic:invoke()   Type Function\n  Return value none\n  See also vibrator.* Haptic\n  Overview Invokes the Taptic Engine.\nSyntax haptic:invoke([notificationType]) notificationType optional String. Only for the 'notification' haptic type. Vibrates with different patterns based on the notification type, can be 'success' (default), 'warning' or 'error'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/isActive/",
	"title": "isActive",
	"tags": [],
	"description": "",
	"content": "bluetooth.isActive   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event advertising\n  See also advertising bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/init/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event init\n  See also init bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event scan\n  See also scan bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicChanged/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onCharacteristicChanged\n  See also onCharacteristicChanged bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onReliableWriteCompleted\n  See also onReliableWriteCompleted bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onServicesDiscovered\n  See also onServicesDiscovered bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onExecuteWrite\n  See also onExecuteWrite bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onMtuChanged/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onMtuChanged\n  See also onMtuChanged bluetooth.*\n  Overview false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onNotificationSent\n  See also onNotificationSent bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean Event onServiceAdded\n  See also onServiceAdded bluetooth.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/chrometabs/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event chrometabs\n  See also chrometabs chrometabs.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event beam\n  See also beam nfc.*\n  Overview Always false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/init/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event init\n  See also init nfc.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event nfc\n  See also nfc nfc.*\n  Overview Boolean of true in case of an error or when the iOS NFC reading dialog is closed.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/writeTag/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event writeTag\n  See also writeTag nfc.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event show\n  See also show qrscanner.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event init\n  See also init texttospeech.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event onComplete\n  See also onComplete texttospeech.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onContinue/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event onContinue\n  See also onContinue texttospeech.*\n  Overview Always false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onPause/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event onPause\n  See also onPause texttospeech.*\n  Overview Always false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event onProgress\n  See also onProgress texttospeech.*\n  Overview Always false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onStart/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event onStart\n  See also onStart texttospeech.*\n  Overview Always false.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/login/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event login\n  See also login vk.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event request\n  See also request vk.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/showShareDialog/isError/",
	"title": "isError",
	"tags": [],
	"description": "",
	"content": "event.isError   Type Boolean\n  Event showShareDialog\n  See also showShareDialog vk.*\n  Overview Boolean of true in case of an error.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/isExecution/",
	"title": "isExecution",
	"tags": [],
	"description": "",
	"content": "event.isExecution   Type Boolean Event onExecuteWrite\n  See also onExecuteWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/isHttpsRequired/",
	"title": "isHttpsRequired",
	"tags": [],
	"description": "",
	"content": "object.isHttpsRequired   Type Boolean\n  See also vk.*\n  Overview true if user has enabled the secure connection setting in his or her VK account.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/isLoggedIn/",
	"title": "isLoggedIn",
	"tags": [],
	"description": "",
	"content": "vk.isLoggedIn()   Type Function\n  Return value Boolean\n  See also vk.*\n  Overview Returns true if the user has logged in.\nSyntax vk.isLoggedIn() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/isMultipleAdvertisementSupported/",
	"title": "isMultipleAdvertisementSupported",
	"tags": [],
	"description": "",
	"content": "bluetooth.isMultipleAdvertisementSupported   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/isOffloadedFilteringSupported/",
	"title": "isOffloadedFilteringSupported",
	"tags": [],
	"description": "",
	"content": "bluetooth.isOffloadedFilteringSupported   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/isOffloadedScanBatchingSupported/",
	"title": "isOffloadedScanBatchingSupported",
	"tags": [],
	"description": "",
	"content": "bluetooth.isOffloadedScanBatchingSupported   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/isPreparedWrite/",
	"title": "isPreparedWrite",
	"tags": [],
	"description": "",
	"content": "event.isPreparedWrite   Type Boolean Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/isPreparedWrite/",
	"title": "isPreparedWrite",
	"tags": [],
	"description": "",
	"content": "event.isPreparedWrite   Type Boolean Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/isPrimary/",
	"title": "isPrimary",
	"tags": [],
	"description": "",
	"content": "object.isPrimary   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/isResponseNeeded/",
	"title": "isResponseNeeded",
	"tags": [],
	"description": "",
	"content": "event.isResponseNeeded   Type Boolean Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/isResponseNeeded/",
	"title": "isResponseNeeded",
	"tags": [],
	"description": "",
	"content": "event.isResponseNeeded   Type Boolean Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/isScanning/",
	"title": "isScanning",
	"tags": [],
	"description": "",
	"content": "bluetooth.isScanning   Type Boolean\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/isSpeaking/",
	"title": "isSpeaking",
	"tags": [],
	"description": "",
	"content": "texttospeech.isSpeaking()   Type Function\n  Return value Boolean\n  See also texttospeech.*\n  Overview Returns true if currently speaking.\nSyntax texttospeech.isSpeaking() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/languages/",
	"title": "languages",
	"tags": [],
	"description": "",
	"content": "event.languages   Type Array\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview The list of available languages.\nSample output { \u0026#39;vi-VN\u0026#39;, \u0026#39;en-AU\u0026#39;, \u0026#39;ku-\u0026#39;, \u0026#39;pl-PL\u0026#39;, \u0026#39;pt-BR\u0026#39;, \u0026#39;da-DK\u0026#39;, \u0026#39;ta-\u0026#39;, \u0026#39;sq-\u0026#39;, \u0026#39;ja-JP\u0026#39;, \u0026#39;cy-\u0026#39;, \u0026#39;en-US\u0026#39;, \u0026#39;tr-TR\u0026#39;, \u0026#39;ru-RU\u0026#39;, \u0026#39;in-ID\u0026#39;, \u0026#39;ko-KR\u0026#39;, \u0026#39;yue-HK\u0026#39;, \u0026#39;hi-IN\u0026#39;, \u0026#39;bn-BD\u0026#39;, \u0026#39;sr-\u0026#39;, \u0026#39;fi-FI\u0026#39;, \u0026#39;en-IN\u0026#39;, \u0026#39;it-IT\u0026#39;, \u0026#39;cs-\u0026#39;, \u0026#39;ca-\u0026#39;, \u0026#39;hr-\u0026#39;, \u0026#39;de-DE\u0026#39;, \u0026#39;es-US\u0026#39;, \u0026#39;zh-CN\u0026#39;, \u0026#39;sk-\u0026#39;, \u0026#39;es-ES\u0026#39;, \u0026#39;zh-TW\u0026#39;, \u0026#39;th-TH\u0026#39;, \u0026#39;sw-\u0026#39;, \u0026#39;sv-SE\u0026#39;, \u0026#39;nb-NO\u0026#39;, \u0026#39;fr-BE\u0026#39;, \u0026#39;en-GB\u0026#39;, \u0026#39;la-\u0026#39;, \u0026#39;nl-NL\u0026#39;, \u0026#39;bs-\u0026#39;, \u0026#39;hu-HU\u0026#39;, \u0026#39;pt-PT\u0026#39;, \u0026#39;fr-FR\u0026#39; } "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/logEvent/",
	"title": "logEvent",
	"tags": [],
	"description": "",
	"content": "facebook.logEvent()   Type Function\n  Return value none\n  See also facebook.*\n  Overview Log an app event.\nSyntax facebook.logEvent(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nname required String. Name of the event.\nvalue optional Number. Value to sum of the event.\nparams optional Table. Additional parameters of the event, e.g. {fb_description = 'custom description'}, string keys and string or number values, see Ffacebook SDK documentation for additional parameters.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/login/",
	"title": "login",
	"tags": [],
	"description": "",
	"content": "login   Type Event\n  See also vk.*\n  Overview Occurs when the user has been authorized or authorization failed.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/login/",
	"title": "login",
	"tags": [],
	"description": "",
	"content": "vk.login()   Type Function\n  Return value none\n  See also vk.*\n  Overview User authentication. Uses official VK application if available.\nSyntax vk.login(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nuserInitiated optional Boolean. If not specified or false the user won\u0026rsquo;t be promted with a login window. Use it to silently authorize the user at the start of your application if he or she has logged in before. Specify true if you want the regular login flow, e.g. via a \u0026ldquo;Log in\u0026rdquo; button.\ninApp optional~(iOS)~ Boolean. The plugin uses official VK app if available for authentication. Otherwise, if true on iOS a WebView will be used, if false or not specified - full Safari browser.\nlistener optional Listener. Listener which receives the login event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/logout/",
	"title": "logout",
	"tags": [],
	"description": "",
	"content": "vk.logout()   Type Function\n  Return value none\n  See also vk.*\n  Overview Deauthorizes the user.\nSyntax vk.logout() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/logPurchase/",
	"title": "logPurchase",
	"tags": [],
	"description": "",
	"content": "facebook.logPurchase()   Type Function\n  Return value none\n  See also facebook.*\n  Overview Log an app purchase manually. Only use it if you have configured your app not to log purchases automatically.\nSyntax facebook.logPurchase(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ncurrency required String. Name of the currency, e.g. 'USD'.\nvalue required Number. Amount of money.\nparams optional Table. Additional parameters of the purchase event, e.g. {fb_description = 'custom description'}, string keys and string or number values, see Ffacebook SDK documentation for additional parameters.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/majorClass/",
	"title": "majorClass",
	"tags": [],
	"description": "",
	"content": "object.majorClass   Type String\n  See also bluetooth.*\n  Overview \u0026quot;audio video\u0026quot;, \u0026quot;computer\u0026quot;, \u0026quot;health\u0026quot;, \u0026quot;imaging\u0026quot;, \u0026quot;misc\u0026quot;, \u0026quot;networking\u0026quot;, \u0026quot;peripheral\u0026quot;, \u0026quot;phone\u0026quot;, \u0026quot;toy\u0026quot;, \u0026quot;uncategorized\u0026quot;, \u0026quot;wearable\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/AdvertiseData/manufacturers/",
	"title": "manufacturers",
	"tags": [],
	"description": "",
	"content": "object.manufacturers   Type Array\n  See also bluetooth.*\n  Overview Elements are tables.\nElement id required Number.\ndata required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/maxLength/",
	"title": "maxLength",
	"tags": [],
	"description": "",
	"content": "event.maxLength   Type Integer\n  Event init\n  Platform Android 4.3+\n  See also init texttospeech.*\n  Overview The maximum length of the text that can be passed to the speech engine.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/mayLaunchUrl/",
	"title": "mayLaunchUrl",
	"tags": [],
	"description": "",
	"content": "chrometabs.mayLaunchUrl()   Type Function\n  Return value none\n  See also chrometabs.*\n  Overview Tell the browser which URLs are likely to be requested so that some preloading can happen.\nA session has to be started before calling this function with chrometabs.newSession().\nSyntax chrometabs.mayLaunchUrl(url, additional_urls) url required String. The most probable URL.\nadditional_urls optional Table. The list of other less probable URLs. More probable URLs come first.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/message/",
	"title": "message",
	"tags": [],
	"description": "",
	"content": "event.message   Type String\n  Event show\n  See also show qrscanner.*\n  Overview String decoded message from a QR code or a barcode.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/messages/",
	"title": "messages",
	"tags": [],
	"description": "",
	"content": "event.messages   Type Array\n  Event nfc\n  See also nfc nfc.*\n  Overview Present only when event.type is 'ndef'. Contains NDEF message, which consists of NDEF records.\nEach element of the array is a table with the following properties.\nProperties id String. Record id value.\ntnf String. TNF value. Can be 'absolute uri', 'empty', 'external type', 'mime media', 'unchanged', 'unknown' or 'well known'.\ntype String. NDEF type. Can be 'alternative carrier', 'handover carrier', 'handover request', 'handover select', 'smart poster', 'text' or 'uri'.\nrawTnf Number. Raw TNF integer value.\nrawType Number. Raw NDEF type byte string.\npayload String. Raw byte string of the NDEF payload.\nmimeType String. Optional mime type of the record, only present if can be extracted. Requires Android 4.1+.\nuri String. Optional URI inside the record, only present if can be extracted. Requires Android 4.1+.\ndata Table. Optional parsed NDEF message. See below for details.\nSmart Poster NDEF record data titles Array. Array of tables, optional list of text messages in different languages. Table structure is identical to the Text NDEF tag data.\naction String. Optional recommended action, can be 'unknown', 'do action', 'save for later' or 'open for editing'.\nmimeType String. Optional mime type of the entity that the uri points to.\nuri String. URI of the Smart Poster NDEF tag record.\nText NDEF record data encoding String. Either 'UTF-8' or 'UTF-16'.\nlanguage String. Language code of the text.\ntext String. text message.\nURI NDEF record data uri String. URI of the record.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/mode/",
	"title": "mode",
	"tags": [],
	"description": "",
	"content": "event.mode   Type String Event advertising\n  See also advertising bluetooth.*\n  Overview \u0026quot;low latency\u0026quot;, \u0026quot;low power\u0026quot; or \u0026quot;balanced\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/",
	"title": "mousecursor",
	"tags": [],
	"description": "",
	"content": "mousecursor.* — Mouse Cursor   Type Library\n  Overview The Mouse Cursor plugin can change mouse cursor image to either one of the standard system choices or to a custom image using native system API (not Corona display object). To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nThis is a must have plugin for any desktop game, if a display object is used as a mouse cursor it lags on many systems making playing the game uncomfortable. System cursors in this plugin don\u0026rsquo;t have such problem.\nSupported platforms: macOS 10.3+. Windows XP+.\nThe latest version requires Corona 2016.2906 or later.\nSyntax local mousecursor = require(\u0026#39;plugin.mousecursor\u0026#39;) Functions mousecursor.newCursor() mousecursor.show() mousecursor.hide() mousecursor.enableDebug() Types Cursor Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.mousecursor\u0026#39;] = spiralcodestudio_plugin(\u0026#39;mousecursor\u0026#39;) } } Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-mousecursor\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onMtuChanged/mtu/",
	"title": "mtu",
	"tags": [],
	"description": "",
	"content": "event.mtu   Type String Event onMtuChanged\n  See also onMtuChanged bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event advertising\n  See also advertising bluetooth.*\n  Overview The string \u0026quot;advertising\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/init/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event init\n  See also init bluetooth.*\n  Overview The string \u0026quot;init\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event scan\n  See also scan bluetooth.*\n  Overview The string \u0026quot;scan\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "object.name   Type String\n  See also bluetooth.*\n  Overview Can be nil.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicChanged/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onCharacteristicChanged\n  See also onCharacteristicChanged bluetooth.*\n  Overview The string \u0026quot;onCharacteristicChanged\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onCharacteristicRead\n  See also onCharacteristicRead bluetooth.*\n  Overview The string \u0026quot;onCharacteristicRead\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onCharacteristicWrite\n  See also onCharacteristicWrite bluetooth.*\n  Overview The string \u0026quot;onCharacteristicWrite\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview The string \u0026quot;onConnectionStateChange\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onDescriptorRead\n  See also onDescriptorRead bluetooth.*\n  Overview The string \u0026quot;onDescriptorRead\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onDescriptorWrite\n  See also onDescriptorWrite bluetooth.*\n  Overview The string \u0026quot;onDescriptorWrite\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview The string \u0026quot;onReadRemoteRssi\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onReliableWriteCompleted\n  See also onReliableWriteCompleted bluetooth.*\n  Overview The string \u0026quot;onReliableWriteCompleted\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onServicesDiscovered\n  See also onServicesDiscovered bluetooth.*\n  Overview The string \u0026quot;onServicesDiscovered\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview The string \u0026quot;onCharacteristicReadRequest\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview The string \u0026quot;onCharacteristicReadRequest\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview The string \u0026quot;onConnectionStateChange\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview The string \u0026quot;onDescriptorReadRequest\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview The string \u0026quot;onDescriptorWriteRequest\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onExecuteWrite\n  See also onExecuteWrite bluetooth.*\n  Overview The string \u0026quot;onExecuteWrite\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onMtuChanged/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onMtuChanged\n  See also onMtuChanged bluetooth.*\n  Overview The string \u0026quot;onMtuChanged\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onNotificationSent\n  See also onNotificationSent bluetooth.*\n  Overview The string \u0026quot;onNotificationSent\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String Event onServiceAdded\n  See also onServiceAdded bluetooth.*\n  Overview The string \u0026quot;onServiceAdded\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/chrometabs/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event chrometabs\n  See also chrometabs chrometabs.*\n  Overview The string \u0026quot;chrometabs\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The string \u0026quot;fbapplink\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event beam\n  See also beam nfc.*\n  Overview The string \u0026quot;beam\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/init/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event init\n  See also init nfc.*\n  Overview The string \u0026quot;init\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event nfc\n  See also nfc nfc.*\n  Overview The string \u0026quot;nfc\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/writeTag/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event writeTag\n  See also writeTag nfc.*\n  Overview The string \u0026quot;writeTag\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event show\n  See also show qrscanner.*\n  Overview The string \u0026quot;show\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview The string \u0026quot;getLanguagesAndVoices\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/init/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event init\n  See also init texttospeech.*\n  Overview The string \u0026quot;init\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event onComplete\n  See also onComplete texttospeech.*\n  Overview The string \u0026quot;onComplete\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onContinue/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event onContinue\n  See also onContinue texttospeech.*\n  Overview The string \u0026quot;onContinue\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onPause/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event onPause\n  See also onPause texttospeech.*\n  Overview The string \u0026quot;onPause\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event onProgress\n  See also onProgress texttospeech.*\n  Overview The string \u0026quot;onProgress\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onStart/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event onStart\n  See also onStart texttospeech.*\n  Overview The string \u0026quot;onStart\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/login/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event login\n  See also login vk.*\n  Overview The string \u0026quot;login\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event request\n  See also request vk.*\n  Overview The string \u0026quot;request\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/showShareDialog/name/",
	"title": "name",
	"tags": [],
	"description": "",
	"content": "event.name   Type String\n  Event showShareDialog\n  See also showShareDialog vk.*\n  Overview The string \u0026quot;showShareDialog\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/type/NdefMessage/",
	"title": "NdefMessage",
	"tags": [],
	"description": "",
	"content": "NdefMessage   Type Array\n  See also nfc.*\n  Overview NDEF message is an array containing NDEF records. Each NDEF records is a table with the following fields.\nNDEF Record You can supply either verbose string values for tnf and type or you can supply raw values with rawTnf and rawType. Raw fields have higher priority. You are responsible for constructing a valid NDEF message, otherwise such messages can fail to be read on other devices. A single record should at least have a TNF value, other fields are optional or up to the specification.\ntnf optional String. TNF value, can be one of these:\n 'absolute uri' 'empty' 'external type' 'mime media' 'unchanged' 'unknown' 'well known'  type optional String. Type value, can be one of these or nil:\n 'alternative carrier' 'handover carrier' 'handover request' 'handover select' 'smart poster' 'text' 'uri'  id optional String. Id value, can be nil.\npayload optional String. Payload data, can be nil.\nrawTnf optional Number. TNF value as an integer value.\nrawType optional String. Byte array of the type value.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/newCursor/",
	"title": "newCursor",
	"tags": [],
	"description": "",
	"content": "mousecursor.newCursor()   Type Function\n  Return value Cursor\n  See also mousecursor.*\n  Overview Creates a cursor instance.\nThe cursor is not visible by defualt, call cursor:show() to make it visible.\nYou can either use standard system cursors like crosshair or pointing hand, or load a custom image to be used as a cursor.\nIf you are using several cursors in your app, there is no need to create a new instance each time mouse enters a specified area. Create all cursor instances at once and later switch between them by calling cursor:show().\nCustom cursor image format  macOS: PNG image. Windows: CUR or ANI file.  Syntax This function accepts either a name string argument for the standard system cursor, or a params table for a custom image cursor.\nmousecursor.newCursor(name | params) name required String. Name of a standard system mouse cursor. See the \u0026ldquo;Standard cursors\u0026rdquo; section for the list of system cursors.\nparams required Table. Contains parameters to make a cursor from a custom image.\nParameter reference The params table includes parameters for the call.\nfilename required String. Custom cursor image filename. PMG on macOS, CUR or ANI on Windows.\nbaseDir optional Constant Image base directory. Default is system.ResourceDirectory.\nx optionalmacOS only Integer. X coordinate of the cursor\u0026rsquo;s tip point in the image. Default is 0.\ny optionalmacOS only Integer. Y coordinate of the cursor\u0026rsquo;s tip point in the image. Default is 0.\nStandard cursors Universal  'arrow' 'crosshair' 'i beam' 'pointing hand' 'operation not allowed' 'resize left right' 'resize up' 'resize up down'  macOS  'contextual menu' 'closed hand' 'disappearing item' 'drag copy' 'drag link' 'open hand' 'resize down' 'resize left' 'resize right' 'i beam vertical'  Windows  'small hourglass' 'help' 'resize all' 'resize up right' 'resize up left' 'hourglass'  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/newHaptic/",
	"title": "newHaptic",
	"tags": [],
	"description": "",
	"content": "vibrator.newHaptic()   Type Function\n  Return value Haptic\n  See also vibrator.*\n  Overview Returns a Haptic object, which provides the direct access to the Apple\u0026rsquo;s Taptic Engine. iOS only.\nFor more details on that API please refer to the Apple\u0026rsquo;s Reference.\nSyntax vibrator.newHaptic([type], [intensity]) type optional String. Haptic feedback type, can be 'impact' (default), 'selection' or 'notification'.\nintensity optional String. Intensity level of 'impact' haptic, can be 'light', 'medium' (default) or 'heavy'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/newServer/",
	"title": "newServer",
	"tags": [],
	"description": "",
	"content": "bluetooth.newServer()   Type Function Return value Server\n  See also bluetooth.*\n  Overview Syntax bluetooth.newServer( params )  params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nonCharacteristicReadRequest optional Listener.\nonCharacteristicWriteRequest optional Listener.\nonConnectionStateChange optional Listener.\nonDescriptorReadRequest optional Listener.\nonDescriptorWriteRequest optional Listener.\nonExecuteWrite optional Listener.\nonMtuChanged optional Listener.\nonNotificationSent optional Listener.\nonServiceAdded optional Listener.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/newSession/",
	"title": "newSession",
	"tags": [],
	"description": "",
	"content": "chrometabs.newSession()   Type Function\n  Return value none\n  See also chrometabs.*\n  Overview Starts a new session. When a session has been activated you may call chrometabs.mayLaunchUrl(), a new session after that decreases priority of provided URLs. The plugin must be initialized.\nSyntax chrometabs.newSession() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/",
	"title": "nfc",
	"tags": [],
	"description": "",
	"content": "nfc.* — NFC   Type Library\n  Overview The NFC plugin enables your application to read NFC tags. NFC stands for Near Field Communication. At the moment the plugin only supports NDEF tags, but in the future based on your feedback, the plugin can be enhaced. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: Android 4.0+. Some features require Android 4.1+ or 6.0+. iOS 11+.\nOn iOS only iPhone 7 and later have capability to read NFC tags. And only NDEF tags are supported.\nThe latest version requires Corona 2016.3068 or later.\nSyntax local nfc = require(\u0026#39;plugin.nfc\u0026#39;) Functions nfc.enableDebug() nfc.init() nfc.show() nfc.close() nfc.setListener() nfc.removeListener() nfc.writeTag() nfc.releaseTag() nfc.beam() nfc.cancelBeam() Events init nfc writeTag beam Types NdefMessage Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.nfc\u0026#39;] = spiralcodestudio_plugin(\u0026#39;nfc\u0026#39;) } } As per Apple requirement, you also have to add an NFC usage description. And a special entitlement record.\nsettings = { iphone = { plist = { NFCReaderUsageDescription = \u0026#39;Testing NFC\u0026#39; }, entitlements = { [\u0026#39;com.apple.developer.nfc.readersession.formats\u0026#39;] = {\u0026#39;NDEF\u0026#39;} } } } You can replace 'Testing NFC' with your own description.\nAnd don\u0026rsquo;t forget to enable \u0026ldquo;NFC Tag Reading\u0026rdquo; service for your iOS App Id on Apple\u0026rsquo;s developer portal.\nIf you want your Android application to be able to launch when an NFC device is discovered, you should add a specific intent filter into build.settings. You can read more on that and about NFC in general here.\nFor example a broad intent filter with low priority can look like this:\nsettings = { android = { intentFilters = { { actions = {\u0026#39;android.nfc.action.NDEF_DISCOVERED\u0026#39;}, categories = {\u0026#39;android.intent.category.DEFAULT\u0026#39;} },{ actions = {\u0026#39;android.nfc.action.TAG_DISCOVERED\u0026#39;}, categories = {\u0026#39;android.intent.category.DEFAULT\u0026#39;} } } } } A narrower and hence higher priority intent filter that only wants NDEF tags with text/plain mime type can look like this:\nsettings = { android = { intentFilters = { { actions = {\u0026#39;android.nfc.action.NDEF_DISCOVERED\u0026#39;}, categories = {\u0026#39;android.intent.category.DEFAULT\u0026#39;}, data = {mimeType = \u0026#39;text/plain\u0026#39;} } } } } You don\u0026rsquo;t need to specify any extra Android permissions.\nWhen you want to use the plugin, require it, init it and set a listener.\nlocal nfc = require(\u0026#39;plugin.nfc\u0026#39;) nfc.init(function(event) print(\u0026#39;Init event:\u0026#39;, json.prettify(event)) end)) nfc.setListener(function(event) print(\u0026#39;NFC event:\u0026#39;, json.prettify(event)) end)) On iOS you also have to call nfc.show() to open NFC reading dialog.\nnfc.show{message = \u0026#39;Place an NDEF tag.\u0026#39;} Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-nfc\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/",
	"title": "nfc",
	"tags": [],
	"description": "",
	"content": "nfc   Type Event\n  See also nfc.*\n  Overview Describes the discovered NFC device.\nProperties event.name event.isError event.errorMessage event.errorCode event.type event.id event.intentType event.tag event.messages "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/notifyCharacteristicChanged/",
	"title": "notifyCharacteristicChanged",
	"tags": [],
	"description": "",
	"content": "object:notifyCharacteristicChanged()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:notifyCharacteristicChanged( device, characteristic, [isConfirmationNeeded] )  device required Device.\ncharacteristic required Characteristic.\nisConfirmationNeeded optional Boolean.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/offset/",
	"title": "offset",
	"tags": [],
	"description": "",
	"content": "event.offset   Type Number Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/offset/",
	"title": "offset",
	"tags": [],
	"description": "",
	"content": "event.offset   Type Number Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/offset/",
	"title": "offset",
	"tags": [],
	"description": "",
	"content": "event.offset   Type Number Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/offset/",
	"title": "offset",
	"tags": [],
	"description": "",
	"content": "event.offset   Type Number Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicChanged/",
	"title": "onCharacteristicChanged",
	"tags": [],
	"description": "",
	"content": "onCharacteristicChanged   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.gatt event.characteristic "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicRead/",
	"title": "onCharacteristicRead",
	"tags": [],
	"description": "",
	"content": "onCharacteristicRead   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.characteristic "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/",
	"title": "onCharacteristicReadRequest",
	"tags": [],
	"description": "",
	"content": "onCharacteristicReadRequest   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.requestId event.offset event.characteristic "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onCharacteristicWrite/",
	"title": "onCharacteristicWrite",
	"tags": [],
	"description": "",
	"content": "onCharacteristicWrite   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.characteristic "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/",
	"title": "onCharacteristicWriteRequest",
	"tags": [],
	"description": "",
	"content": "onCharacteristicWriteRequest   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.requestId event.characteristic event.isPreparedWrite event.isResponseNeeded event.offset event.value "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onComplete/",
	"title": "onComplete",
	"tags": [],
	"description": "",
	"content": "onComplete   Type Event\n  See also texttospeech.*\n  Overview Occurs when the speech has ended.\nProperties event.name event.isError event.errorMessage event.errorCode event.id "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/",
	"title": "onConnectionStateChange",
	"tags": [],
	"description": "",
	"content": "onConnectionStateChange   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.state "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/",
	"title": "onConnectionStateChange",
	"tags": [],
	"description": "",
	"content": "onConnectionStateChange   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.device event.state "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onContinue/",
	"title": "onContinue",
	"tags": [],
	"description": "",
	"content": "onContinue   Type Event\n  See also texttospeech.*\n  Overview Occurs when the speech has been resumed after being paused.\nProperties event.name event.isError event.id "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorRead/",
	"title": "onDescriptorRead",
	"tags": [],
	"description": "",
	"content": "onDescriptorRead   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.descriptor "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/",
	"title": "onDescriptorReadRequest",
	"tags": [],
	"description": "",
	"content": "onDescriptorReadRequest   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.requestId event.offset event.descriptor "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onDescriptorWrite/",
	"title": "onDescriptorWrite",
	"tags": [],
	"description": "",
	"content": "onDescriptorWrite   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.descriptor "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/",
	"title": "onDescriptorWriteRequest",
	"tags": [],
	"description": "",
	"content": "onDescriptorWriteRequest   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.requestId event.descriptor event.isPreparedWrite event.isResponseNeeded event.offset event.value "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/",
	"title": "onExecuteWrite",
	"tags": [],
	"description": "",
	"content": "onExecuteWrite   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.requestId event.isExecution "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onMtuChanged/",
	"title": "onMtuChanged",
	"tags": [],
	"description": "",
	"content": "onMtuChanged   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.device event.mtu "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onNotificationSent/",
	"title": "onNotificationSent",
	"tags": [],
	"description": "",
	"content": "onNotificationSent   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.device "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onPause/",
	"title": "onPause",
	"tags": [],
	"description": "",
	"content": "onPause   Type Event\n  See also texttospeech.*\n  Overview Occurs when the speech has been paused.\nProperties event.name event.isError event.id "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/",
	"title": "onProgress",
	"tags": [],
	"description": "",
	"content": "onProgress   Type Event\n  See also texttospeech.*\n  Overview Occurs during the speech, indicating the generation progress.\nProperties event.name event.isError event.id event.audio event.start event.count "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/",
	"title": "onReadRemoteRssi",
	"tags": [],
	"description": "",
	"content": "onReadRemoteRssi   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt event.rssi "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReliableWriteCompleted/",
	"title": "onReliableWriteCompleted",
	"tags": [],
	"description": "",
	"content": "onReliableWriteCompleted   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onServiceAdded/",
	"title": "onServiceAdded",
	"tags": [],
	"description": "",
	"content": "onServiceAdded   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.device "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onServicesDiscovered/",
	"title": "onServicesDiscovered",
	"tags": [],
	"description": "",
	"content": "onServicesDiscovered   Type Event\n  See also bluetooth.*\n  Overview Properties event.name event.isError event.errorCode event.errorMessage event.gatt "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onStart/",
	"title": "onStart",
	"tags": [],
	"description": "",
	"content": "onStart   Type Event\n  See also texttospeech.*\n  Overview Occurs when the speech is about to start.\nProperties event.name event.isError event.id "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/pause/",
	"title": "pause",
	"tags": [],
	"description": "",
	"content": "texttospeech.pause()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Pauses an ongoing speech. Can be resumed by texttospeech.continue()\nSyntax texttospeech.pause(waitForWordEnd) waitForWordEnd optional Boolean. If true, the speech will be interrupted at the word end. Otherwise the speech will be interrupted immediately.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/peerLlcpMajorVersion/",
	"title": "peerLlcpMajorVersion",
	"tags": [],
	"description": "",
	"content": "event.peerLlcpMajorVersion   Type Number\n  Event beam\n  See also beam nfc.*\n  Overview The major LLCP version number of the peer associated with the transfer. Requires Android 6.0+.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/peerLlcpMinorVersion/",
	"title": "peerLlcpMinorVersion",
	"tags": [],
	"description": "",
	"content": "event.peerLlcpMinorVersion   Type Number\n  Event beam\n  See also beam nfc.*\n  Overview The minor LLCP version number of the peer associated with the transfer. Requires Android 6.0+.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/permissions/",
	"title": "permissions",
	"tags": [],
	"description": "",
	"content": "object.permissions   Type Array\n  See also bluetooth.*\n  Overview Can contain \u0026quot;read\u0026quot;, \u0026quot;read encrypted\u0026quot;, \u0026quot;read encrypted mitm\u0026quot;, \u0026quot;write\u0026quot;, \u0026quot;write encrypted\u0026quot;, \u0026quot;write encrypted mitm\u0026quot;, \u0026quot;write signed\u0026quot; and \u0026quot;write signed mitm\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/permissions/",
	"title": "permissions",
	"tags": [],
	"description": "",
	"content": "object.permissions   Type Array\n  See also bluetooth.*\n  Overview Can contain \u0026quot;read\u0026quot;, \u0026quot;read encrypted\u0026quot;, \u0026quot;read encrypted mitm\u0026quot;, \u0026quot;write\u0026quot;, \u0026quot;write encrypted\u0026quot;, \u0026quot;write encrypted mitm\u0026quot;, \u0026quot;write signed\u0026quot; and \u0026quot;write signed mitm\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/event/chrometabs/phase/",
	"title": "phase",
	"tags": [],
	"description": "",
	"content": "event.phase   Type String\n  Event chrometabs\n  See also chrometabs chrometabs.*\n  Overview Phase, 'init'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/beam/phase/",
	"title": "phase",
	"tags": [],
	"description": "",
	"content": "event.phase   Type String\n  Event beam\n  See also beam nfc.*\n  Overview Indicates the phase of the NFC beaming process.\n 'started' - the beaming transfer has just started. 'completed' - the beaming transfer has just completed.  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/type/Haptic/prepare/",
	"title": "prepare",
	"tags": [],
	"description": "",
	"content": "haptic:prepare()   Type Function\n  Return value none\n  See also vibrator.* Haptic\n  Overview Puts the Taptic Engine into the prepared state, in which a shortly delayed call to invoke() has a smaller latency.\nSyntax haptic:prepare() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/promotionCode/",
	"title": "promotionCode",
	"tags": [],
	"description": "",
	"content": "event.promotionCode   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The promotion code string. Android only.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/properties/",
	"title": "properties",
	"tags": [],
	"description": "",
	"content": "object.properties   Type Array\n  See also bluetooth.*\n  Overview Can contain \u0026quot;broadcast\u0026quot;, \u0026quot;extended props\u0026quot;, \u0026quot;indicate\u0026quot;, \u0026quot;notify\u0026quot;, \u0026quot;read\u0026quot;, \u0026quot;signed write\u0026quot;, \u0026quot;write\u0026quot; and \u0026quot;write no response\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/",
	"title": "qrscanner",
	"tags": [],
	"description": "",
	"content": "qrscanner.* — QR Scanner   Type Library\n  Overview The QR Scanner plugin lets you scan QR Codes and other barcodes in your Solar2D app. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: iOS 8+, Android 4.1+.\nThe latest version requires Solar2D 2020.3610 or later.\nScreenshots Syntax local qrscanner = require(\u0026#39;plugin.qrscanner\u0026#39;) Functions qrscanner.enableDebug() qrscanner.show() Events show Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { android = { minSdkVersion = \u0026#39;16\u0026#39; }, plugins = { [\u0026#39;plugin.qrscanner\u0026#39;] = spiralcodestudio_plugin(\u0026#39;qrscanner\u0026#39;) } } Also for iOS 10 support you need to add a description for the camera permission. Add to your build.settings inside iphone-\u0026gt;plist section.\nNSPhotoLibraryUsageDescription = \u0026#34;Not used in this app\u0026#34;, NSCameraUsageDescription = \u0026#34;Used to scan QR codes and barcodes\u0026#34; Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-qrscanner\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/readCharacteristic/",
	"title": "readCharacteristic",
	"tags": [],
	"description": "",
	"content": "object:readCharacteristic()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:readCharacteristic( characteristic )  characteristic required Characteristic.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/readDescriptor/",
	"title": "readDescriptor",
	"tags": [],
	"description": "",
	"content": "object:readDescriptor()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:readDescriptor( descriptor )  descriptor required Descriptor.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/readRemoteRssi/",
	"title": "readRemoteRssi",
	"tags": [],
	"description": "",
	"content": "object:readRemoteRssi()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:readRemoteRssi()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/record/",
	"title": "record",
	"tags": [],
	"description": "",
	"content": "event.record   Type String Event scan\n  See also scan bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/ref/",
	"title": "ref",
	"tags": [],
	"description": "",
	"content": "event.ref   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The ref string. Android only.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/referer/",
	"title": "referer",
	"tags": [],
	"description": "",
	"content": "event.referer   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The referer bundle string. Android only.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/releaseTag/",
	"title": "releaseTag",
	"tags": [],
	"description": "",
	"content": "nfc.releaseTag()   Type Function\n  Return value none\n  Platform Android only\n  See also nfc.*\n  Overview Release a previously discovered tag, meaning that you don\u0026rsquo;t plan to write any data to it.\nSyntax nfc.releaseTag() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/removeListener/",
	"title": "removeListener",
	"tags": [],
	"description": "",
	"content": "nfc.removeListener()   Type Function\n  Return value none\n  See also nfc.*\n  Overview Removes a previously defined with nfc.setListener() listener.\nSyntax nfc.removeListener() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/removeService/",
	"title": "removeService",
	"tags": [],
	"description": "",
	"content": "object:removeService()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:removeService( service )  service required Service.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/",
	"title": "request",
	"tags": [],
	"description": "",
	"content": "request   Type Event\n  See also vk.*\n  Overview Occurs when the user has been authorized or authorization failed.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/request/",
	"title": "request",
	"tags": [],
	"description": "",
	"content": "vk.request()   Type Function\n  Return value none\n  See also vk.*\n  Overview Queries VK server with the specified request and delivers it\u0026rsquo;s response.\nSyntax vk.request(method, params, [listener]) method required String. VK API method. See the list of methods.\nparams required Table. Table of strings keys and various values to be submitted with the request. Each method has it\u0026rsquo;s own set of valid params.\nlistener optional Listener. Listener which receives the request event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/requestConnectionPriority/",
	"title": "requestConnectionPriority",
	"tags": [],
	"description": "",
	"content": "object:requestConnectionPriority()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:requestConnectionPriority( priority )  priority required String. \u0026quot;high\u0026quot;, \u0026quot;low power\u0026quot; or \u0026quot;balanced\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicReadRequest/requestId/",
	"title": "requestId",
	"tags": [],
	"description": "",
	"content": "event.requestId   Type String Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/requestId/",
	"title": "requestId",
	"tags": [],
	"description": "",
	"content": "event.requestId   Type String Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorReadRequest/requestId/",
	"title": "requestId",
	"tags": [],
	"description": "",
	"content": "event.requestId   Type String Event onDescriptorReadRequest\n  See also onDescriptorReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/requestId/",
	"title": "requestId",
	"tags": [],
	"description": "",
	"content": "event.requestId   Type String Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onExecuteWrite/requestId/",
	"title": "requestId",
	"tags": [],
	"description": "",
	"content": "event.requestId   Type String Event onExecuteWrite\n  See also onExecuteWrite bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/requestMtu/",
	"title": "requestMtu",
	"tags": [],
	"description": "",
	"content": "object:requestMtu()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:requestMtu( mtu )  mtu required Number.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/request/response/",
	"title": "response",
	"tags": [],
	"description": "",
	"content": "event.response   Type String\n  Event request\n  See also request vk.*\n  Overview VK server\u0026rsquo;s response string.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/rssi/",
	"title": "rssi",
	"tags": [],
	"description": "",
	"content": "event.rssi   Type Number Event scan\n  See also scan bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onReadRemoteRssi/rssi/",
	"title": "rssi",
	"tags": [],
	"description": "",
	"content": "event.rssi   Type Number Event onReadRemoteRssi\n  See also onReadRemoteRssi bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/scan/",
	"title": "scan",
	"tags": [],
	"description": "",
	"content": "scan   Type Event\n  See also bluetooth.*\n  Overview Delivers Bluetooth scan results.\nProperties event.name event.isError event.device event.rssi event.record "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/secret/",
	"title": "secret",
	"tags": [],
	"description": "",
	"content": "object.secret   Type String\n  See also vk.*\n  Overview Access token\u0026rsquo;s secret, whatever that means.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/sendResponse/",
	"title": "sendResponse",
	"tags": [],
	"description": "",
	"content": "object:sendResponse()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:sendResponse( device, requestId, status, value, [offset] )  device required Device.\nrequestId required String.\nstatus required String.\nvalue required String.\noffset optional Number.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/",
	"title": "Server",
	"tags": [],
	"description": "",
	"content": "Server   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth GATT Server.\nFunctions object.addService() object.cancelConnection() object.clearServices() object.close() object.connect() object.getService() object.getServices() object.notifyCharacteristicChanged() object.removeService() object.sendResponse() Events onCharacteristicReadRequest onCharacteristicWriteRequest onConnectionStateChange onDescriptorReadRequest onDescriptorWriteRequest onExecuteWrite onMtuChanged onNotificationSent onServiceAdded "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/",
	"title": "Service",
	"tags": [],
	"description": "",
	"content": "Service   Type Table\n  See also bluetooth.*\n  Overview Represents a Bluetooth GATT Service.\nProperties object.id object.uuid object.isPrimary Functions object.addCharacteristic() object.addService() object.getCharacteristic() object.getCharacteristics() object.getIncludedServices() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/AdvertiseData/services/",
	"title": "services",
	"tags": [],
	"description": "",
	"content": "object.services   Type Array\n  See also bluetooth.*\n  Overview Elements are tables.\nElement uuid required String.\ndata optional String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/setCharacteristicNotification/",
	"title": "setCharacteristicNotification",
	"tags": [],
	"description": "",
	"content": "object:setCharacteristicNotification()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setCharacteristicNotification( characteristic, isEnabled )  characteristic required Characteristic.\nisEnabled required Boolean.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/setFloatValue/",
	"title": "setFloatValue",
	"tags": [],
	"description": "",
	"content": "object:setFloatValue()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setFloatValue( mantissa, exponent, [format], [offset] )  mantissa required Number. Integer.\nexponent required Number. Integer.\nformat optional String. \u0026quot;float\u0026quot; or \u0026quot;sfloat\u0026quot; (default).\noffset optional Number. Integer, default is 0.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/setIntValue/",
	"title": "setIntValue",
	"tags": [],
	"description": "",
	"content": "object:setIntValue()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setIntValue( value, [format], [offset] )  value required Number. Integer.\nformat optional String. \u0026quot;sint8\u0026quot;, \u0026quot;sint16\u0026quot;, \u0026quot;sint32\u0026quot; (default), \u0026quot;uint8\u0026quot;, \u0026quot;uint16\u0026quot; or \u0026quot;uint32\u0026quot;.\noffset optional Number. Integer, default is 0.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/setLimitEventAndDataUsage/",
	"title": "setLimitEventAndDataUsage",
	"tags": [],
	"description": "",
	"content": "facebook.setLimitEventAndDataUsage()   Type Function\n  Return value none\n  See also facebook.*\n  Overview Sets whether data such as that generated through Facebook SDK AppEvents and sent to Facebook should be restricted from being used for other than analytics and conversions. Defaults is false. This value is stored on the device and persists across app launches.\nSyntax facebook.setLimitEventAndDataUsage(state) "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/setListener/",
	"title": "setListener",
	"tags": [],
	"description": "",
	"content": "nfc.setListener()   Type Function\n  Return value none\n  See also nfc.*\n  Overview Sets a listener to recieve reading TAGs nfc events. If there is a pending NFC event, the listener will be invoked right away. Pending event can occur when your app is launched due to an NFC device being discovered.\nSyntax nfc.setListener(listener) "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/setName/",
	"title": "setName",
	"tags": [],
	"description": "",
	"content": "bluetooth.setName()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.setName( name )  name required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/setPairingConfirmation/",
	"title": "setPairingConfirmation",
	"tags": [],
	"description": "",
	"content": "object:setPairingConfirmation()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setPairingConfirmation( isConfirmed )  isConfirmed required Boolean.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/setPin/",
	"title": "setPin",
	"tags": [],
	"description": "",
	"content": "object:setPin()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setPin( pin )  pin required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/setStringValue/",
	"title": "setStringValue",
	"tags": [],
	"description": "",
	"content": "object:setStringValue()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setStringValue( value )  value required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/setValue/",
	"title": "setValue",
	"tags": [],
	"description": "",
	"content": "object:setValue()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setValue( value )  value required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/setValue/",
	"title": "setValue",
	"tags": [],
	"description": "",
	"content": "object:setValue()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:setValue( value )  value required String.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/setWriteType/",
	"title": "setWriteType",
	"tags": [],
	"description": "",
	"content": "object:setWriteType()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax object:setWriteType( writeType )  format required String. \u0026quot;default\u0026quot;, \u0026quot;no response\u0026quot; or \u0026quot;signed\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "chrometabs.show()   Type Function\n  Return value none\n  See also chrometabs.*\n  Overview Asynchronously fetches app link information that might have been stored for use after installation of the app.\nSyntax chrometabs.show(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nurl required String. URL to load.\nshareMenu optional Boolean. If true - show the standard share menu button.\nurlBarHiding optional Boolean. If true - hide url bar when scrolling.\ninstantApps optional Boolean. If true - allow loading of instant apps.\nshowTitle optional Boolean. If true - show the page title in the url bar.\nstartAnimation optional String. Showing animation, 'slide_right' or 'fade'.\nexitAnimation optional String. Closing animation, same options as for startAnimation.\ntoolbarColor optional Table. Color of the toolbar, a table with RGB values, e.g. {0.9, 0.1, 0.1}.\nsecondaryToolbarColor optional Table. Secondary color of the toolbar, a table with RGB values, e.g. {0.9, 0.1, 0.1}.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "mousecursor.show()   Type Function\n  Return value none\n  See also mousecursor.*\n  Overview Makes mouse cursors visible again.\nSyntax mousecursor.show() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/type/Cursor/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "object:show()   Type Function\n  Return value none\n  See also mousecursor.*\n  Overview Makes a previously hidden or just created cursor visible.\nSyntax object:show() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "nfc.show()   Type Function\n  Return value none\n  Platform iOS only\n  See also nfc.*\n  Overview Shows iOS native NFC reading dialog.\nSyntax nfc.show(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nmessage optional String. A message that appears inside the dialog window with instructions for a user, e.g. 'Place a tag near your device.'\ncloseAfterFirstRead optional Boolean. If true, the dialog window will close after the first discovered tag. Otherwise you will have to close the dialog manually or the user will close it.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "show   Type Event\n  See also qrscanner.*\n  Overview Occurs when a scanning has completed. Either with a scan result or with an error.\nProperties event.name event.isError event.errorMessage event.errorCode event.message event.symbol "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "qrscanner.show()   Type Function\n  Return value none\n  See also qrscanner.*\n  Overview Opens the scanner view.\nSyntax qrscanner.show(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ntopbar optional Table. Topbar options, see below for details.\nuseFrontCamera optional Boolean. Set to true to use the front camera if it\u0026rsquo;s available. If it\u0026rsquo;s not available, the rear camera will be used.\nfilter optional String. Filter regular expression. If present, all codes will be tested against the provided regular expression for a match. Only a matched code will be captured. This option can greatly reduce false triggerings or it can be used to scan only certain codes. For example to match a web URL you can use '^https?://.*'.\nsymbols optional Array of strings. A list of all types of visual codes to search. Default is 'qr'. See below for all supported types.\nmask optional Table. Mask options. Mask is used to limit the scanning area of a camera. See below for details.\noverlays optional Table. Specify what images to use as camera overlays. They are displayed on top of the camera feed. There can be three overlays as key/value pairs: searching, mismatch and found. Searching is the default mode, mismatch is used when a code is recognised, but doesn\u0026rsquo;t match the filter, and found overlay is used when the scanning is successful. Each overlay is an overlay table, see below for details.\nlistener optional Listener. Listener which receives the show event when the scanning has been completed, either successfully or with an error.\ntopbar table Contains options for displaying the topbar of the scanner view.\ntext optional String. Title text.\nfontSize optional~(Android)~ Float. Relative font size of the title text, e.g. 0.5 is half the normal size. Default is 1.0. On iOS the text size is automatically adjusted to fit in the topbar.\ncolor optional Array of floats. RGB color table for the text color. Default is {1.0, 1.0, 1.0}.\nbackgroundColor optional Array of floats. RGB color table for the topbar background color. Default is {0.0, 0.0, 0.0}.\nisHidden optional String. If true the topbar is not displayed and the entire view is filled with the camera feed. There is no way of closing the scanner view other than by successfully scanning something. Suitable for kiosk mode.\nmask table Contains masking parameters. All values are in range of 0.0-1.0. Relative to view width or height.\nx optional Float. X coordinate of the masking window. Default is 0.0.\ny optional Float. Y coordinate of the masking window. Default is 0.0.\nwidth optional Float. Width of the masking window. Default is 1.0.\nheight optional Float. Height of the masking window. Default is 1.0.\ncolor optional Array of floats. RGBA color table for the masking color. Default is {0.0, 0.0, 0.0, 0.5}.\noverlay table Contains filename and a basedir to be used as an overlay image.\nfilename optional String. Filename of an overlay image, e.g. 'images/searching_overlay.png'.\nbaseDir optional Constant. The base directory for the filename. Default is system.ResourceDirectory.\nList of symbols Android and iOS have different set of supported visual codes.\nAndroid: 'code39', 'code93', 'code128', 'codabar', 'ean8', 'ean13', 'i25', 'pdf417', 'qr', 'upca', 'upce', 'datamatrix'.\niOS: 'aztec', 'code39', 'code39mod43', 'code93', 'code128', 'datamatrix', 'ean8', 'ean13', 'interleaved2of5', 'itf14', 'pdf417', 'qr', 'upce'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/toast/show/",
	"title": "show",
	"tags": [],
	"description": "",
	"content": "toast.show()   Type Function\n  Return value none\n  See also toast.*\n  Overview Shows a toast message.\nSyntax toast.show(message, [params]) name required String. Text to be displayed.\nparams optional Table. Additional parameters.\nParameter reference The params table includes parameters for the call.\nduration optional String. Display time, possible values are 'short' and 'long'. Short is 2 seconds, long is 3.5 seconds. On Android it is system dependent. Default value is 'short'.\ngravity optional String. A point on the screen, to which the toast message is anchored. Possible values:\n'TopLeft' 'TopCenter' 'TopRight' 'CenterLeft' 'Center' 'CenterRight' 'BottomLeft' 'BottomCenter' 'BottomRight' Default is 'BottomCenter'.\noffset optional Array. Contains two values: horizontal offset and vertical offset from the anchor point. These values are not in pixels, but in device points instead (scales with device screen density). Default is {64, 64} or {64, 0} or {0, 64} or {0, 0} depending on the gravity value.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/event/showShareDialog/",
	"title": "showShareDialog",
	"tags": [],
	"description": "",
	"content": "showShareDialog   Type Event\n  See also vk.*\n  Overview Occurs when the user has submitted a message or canceled the action.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/showShareDialog/",
	"title": "showShareDialog",
	"tags": [],
	"description": "",
	"content": "vk.showShareDialog()   Type Function\n  Return value none\n  See also vk.*\n  Overview Shows a share popup window, which user can use to edit and post a message on his or her VK wall.\nSyntax vk.showShareDialog(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ntext optional String. Message text.\nlinkTitle optional String. Attached link title text.\nlink optional String. Attached link URL.\nimageId optional String. Attached image VK id.\nimage optional~(iOS)~ Image. Upload and attach the specified image file.\nlistener optional Listener. Listener which receives the showShareDialog event.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/",
	"title": "Solar2D Plugins",
	"tags": [],
	"description": "",
	"content": "Plugins These plugins are designed for Solar2D - previous Corona SDK.\n Bluetooth Chrome Tabs Facebook Flashlight Microphone Mouse Cursor NFC QR Scanner SOX Text To Speech Toast Vibrator VK  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/microphone/",
	"title": "Solar2D Plugins",
	"tags": [],
	"description": "",
	"content": "Microphone Plugin for Solar2D The Microphone plugin allows you to record audio. Includes volume detection (only start recording when volume is high enough) and automatic gain control. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: iOS, Android.\nSample Project https://github.com/Lerg/plugins-sample-microphone\nAPI Overview Functions  microphone.enableDebug() microphone.init() microphone.getVolume() microphone.getGain() microphone.start() microphone.stop() microphone.set() microphone.isRecording()  Events  init recorded  Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.microphone\u0026#39;] = spiralcodestudio_plugin(\u0026#39;microphone\u0026#39;) } } Functions microphone.enableDebug() Enables additional output for debugging purposes. Shows when signal detector changes states.\n microphone.init(params) Initializes the plugin. This function has to be called first, before using any other methods of the plugin.\nparams required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nfilename required String. Filename of the recording.\nbaseDir optional Directory. Where to save the recording. Default is system.DocumentsDirectory.\nsampleRate optional Integer. Sample rate in Hz. Default is 44100.\ndetector optional Table. Signal detector settings.\n  detector.on Number. Start recording when volume is larger or equal to this value.\n  detector.off Number. Trim the end if the volume of the last part is less than this value.\n  Example detector = { on = 0.2, off = 0.05 } gain optional Table. Automatic gain control settings.\n  gain.min Number. Minimal gain. Default is 0.\n  gain.max Number. Maximum gain.\n  gain.value Number. Initial gain value. Default is 1.\n  gain.target Number. Target volume. Set 0 to disable.\n  gain.speed Number. Gain adjustment speed. Default is 0.1.\n  gain.allowClipping Boolean. If true, gain is not automatically reduced to prevent clipping.\n  Example gain = { min = 1, max = 10, target = 0.2 } listener required Function. The callback function which receives init and recorded events.\n microphone.getVolume() Returns current volume as a number between 0 and 1.\nExample local volume = microphone.getVolume() print(volume)  microphone.getGain() Returns current gain value as a number.\nExample local gain = microphone.getGain() print(gain)  microphone.start() Starts the recording.\nExample microphone.start()  microphone.stop() Stops the recording as saves it to a file.\nExample microphone.stop()  microphone.set(params) Adjusts detector settings and automatic gain control settings even while recording. The parameters are same as for the microphone.init() function.\nExample microphone.set{ gain = {value = 1}, detector = {on = 0.5} }  microphone.isRecording() Returns true if currently recording.\nExample print(microphone.isRecording())  Events microphone Occurs when plugin is initialized or the recording is done.\nevent.name event.phase event.is_error event.error_code event.error_message event.name The string 'microphone'.\n event.phase String. 'init' for the initialization phase, 'recorded' for the recording phase.\n event.is_error Boolean. true in case of an error.\n event.error_code Number. Unique error code, present when event.is_error is true, nil otherwise.\nPossible codes:\n  'already_initialized' - init() called before stopping recording.\n  'init_failed' - Failed to init for various reasons.\n  'missing_microphone' - No microphone.\n  'missing_permission' - RECORD_AUDIO permission is missing from the manifest file.\n  'denied_permission' - User denied permission.\n  'permission_request_failed' - User didn\u0026rsquo;t grant permission when requested.\n  'file_open_failed' - Failed to open the file.\n  'file_write_failed' - Failed to write to the file.\n  'empty_recording' - Recording didn\u0026rsquo;t trigger the detector.\n   event.error_message String. Description of an error when event.is_error is true, nil otherwise.\n Example local json = require(\u0026#39;json\u0026#39;) local microphone = require(\u0026#39;plugin.microphone\u0026#39;) -- Random filename prevents audio caching by Solar2D. local filename = \u0026#39;recording_\u0026#39; .. tostring(math.random()):sub(3, 10) .. \u0026#39;.wav\u0026#39; local function microphone_listener(event) print(json.encode(event)) if not event.isError then if event.name == \u0026#39;init\u0026#39; then -- Start recording. timer.performWithDelay(1000, function() microphone.start() end) -- Stop recording. timer.performWithDelay(5000, function() microphone.stop() end) elseif event.name == \u0026#39;recorded\u0026#39; then -- Play recording. local audio_file = audio.loadSound(filename, system.DocumentsDirectory) audio.play(audio_file) end end end microphone.init{ filename = filename, detector = { on = 0.2 off = 0.05 }, gain = { max = 10, target = 0.1, allowClipping = true }, listener = microphone_listener } "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/sox/",
	"title": "Solar2D Plugins",
	"tags": [],
	"description": "",
	"content": "SoX Plugin for Solar2D The SoX plugin allows you to process audio files using the Sound eXchange toolkit. Features audio equalizer, audio normalization, adding reverberation, trimming silence, adjusting pitch, speed and many more.\nTo get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nHere is the list of feautes of SoX http://sox.sourceforge.net/Docs/Features\nSee the official documentation of the toolkit for all effect names and their parameters.\nSupported platforms: iOS, Android, macOS.\nSample Project https://github.com/Lerg/plugins-sample-sox\nAPI Overview Functions  sox.init() sox.process() sox.quit()  Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.sox\u0026#39;] = spiralcodestudio_plugin(\u0026#39;sox\u0026#39;) } } Functions sox.init(params) Initializes the plugin. This function has to be called first, before using any other methods of the plugin.\nReturns true if initialized successfully, false otherwise.\nparams optional Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nverbosity optional String. Set logging level: 'none', 'fail', 'warn', 'report', 'debug', 'debug_more', 'debug_most'. Default is 'warn'.\ntemporary_directory optional String. Path to temporay directory, used by some effects. Normally you should set it to system.pathForFile(nil, system.TemporaryDirectory).\nbuffer_size optional Integer. Size (in bytes) used for blocks of sample data.\ninput_buffer_size optional Integer. Size (in bytes) used for blocks of input sample data.\nuse_threads optional Boolean. Set to true to use threading.\n sox.process(params) Opens an audio file, applies audio effects on it and saves the result as a new audio file.\nparams required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\ninput required String. Path to the input file.\noutput required String. Path to the output file.\neffects required Array. The list of effects to apply. Each effect is a table with effect name and optionally effect parameters.\n effect.name - String. Name of the effect. effect.params - String. Optional parameters for the effect.   sox.quit() Shuts down the SoX engine.\n Example local sox = require(\u0026#39;plugin.sox\u0026#39;) -- Init the SoX engine. local success = sox.init{ verbosity = \u0026#39;debug_most\u0026#39;, temporary_directory = system.pathForFile(nil, system.TemporaryDirectory), buffer_size = 32768, input_buffer_size = 32768, use_threads = true } if not success then print(\u0026#39;Failed to init the SoX plugin.\u0026#39;) end -- Open sample.wav, normalize audio levels and add audio contrast. Save the result as result.wav. sox.process{ input = system.pathForFile(\u0026#39;sample.wav\u0026#39;, system.ResourceDirectory), output = system.pathForFile(\u0026#39;result.wav\u0026#39;, system.DocumentsDirectory), effects = { {name = \u0026#39;gain\u0026#39;, params = \u0026#39;-n\u0026#39;}, {name = \u0026#39;contrast\u0026#39;, params = \u0026#39;50\u0026#39;} } } -- Quit the engine. sox.quit() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/speak/",
	"title": "speak",
	"tags": [],
	"description": "",
	"content": "texttospeech.speak()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Generates and plays the speech. This process is not instant and it will take some time before you actually hear the sound.\nSyntax texttospeech.speak(text, [params]) text required String. The text to be spoken by a speech engine.\nparams optional Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nlanguage optional String. Set the language to be used, values can be 'ru-RU', 'fr-FR' or other. Default is 'en-US'. See texttospeech.getLanguagesAndVoices() for the list of available languages.\nvoice optional String. Set the voice to be used. Default value is specific to the platform and the engine. See texttospeech.getLanguagesAndVoices() for the list of available voices.\npitch optional Float. Set the pitch of the voice, value from 0.5 to 2.0. Default is 1.0.\nrate optional Float. Set the speech rate (speed), value from 0.5 to 2.0, default is 1.0. On iOS, tvOS and macOS limits are not known.\nvolume optional Float. Set the volume of the speech, value from 0.0 to 1.0. Default is 1.0.\nid optional String. Speech identifier. If supplied, it will be passed to the corresponding listeners. Default value is a random numeric string.\nfilename optional~(Android, macOS)~ String. If supplied, the generated speech will be written into a file instead of being played. WAV on Android, AIFF on macOS.\nbaseDir optional~(Android, macOS)~ Constant. The base directory for the filename. Default is system.TemporaryDirectory.\nonStart optional Listener. Listener which receives the onStart event, indicating that the speech has been started.\nonProgress optional Listener. Listener which receives the onProgress event multiple times during the speech.\nonComplete optional Listener. Listener which receives the onComplete event after the speech has ended.\nonPause optional~(not Android)~ Listener. Listener which receives the onPause event when the speech has been paused.\nonContinue optional~(not Android)~ Listener. Listener which receives the onContinue event when the speech has been resumed.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/onProgress/start/",
	"title": "start",
	"tags": [],
	"description": "",
	"content": "event.start   Type Integer\n  Event onProgress\n  Platform Not Android\n  See also onProgress texttospeech.*\n  Overview The start position inside the passed text of the substring, that is currently being processed.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/startAdvertising/",
	"title": "startAdvertising",
	"tags": [],
	"description": "",
	"content": "bluetooth.startAdvertising()   Type Function Return value Userdata\n  See also bluetooth.*\n  Overview Returns a Userdata representing an advertising id.\nSyntax bluetooth.startAdvertising( params )  params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nmode optional String. \u0026quot;low latency\u0026quot;, \u0026quot;low power\u0026quot;, \u0026quot;balanced\u0026quot; (default).\nisConnectable optional Boolean. default is false.\ntimeout optional Number. integer.\ntxPowerLevel optional Number. integer.\nbroadcast optional AdvertiseData.\nresponse optional AdvertiseData.\nlistener optional Listener.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/startScan/",
	"title": "startScan",
	"tags": [],
	"description": "",
	"content": "bluetooth.startScan()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.startScan( [scanListener], [period] )  scanListener optional Listener.\nperiod optional Number. integer, default is 10000.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/event/onConnectionStateChange/state/",
	"title": "state",
	"tags": [],
	"description": "",
	"content": "event.state   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview \u0026quot;connected\u0026quot;, \u0026quot;disconnected\u0026quot;, \u0026quot;connecting\u0026quot; or \u0026quot;disconnecting\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onConnectionStateChange/state/",
	"title": "state",
	"tags": [],
	"description": "",
	"content": "event.state   Type String Event onConnectionStateChange\n  See also onConnectionStateChange bluetooth.*\n  Overview \u0026quot;connected\u0026quot;, \u0026quot;disconnected\u0026quot;, \u0026quot;connecting\u0026quot; or \u0026quot;disconnecting\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/stop/",
	"title": "stop",
	"tags": [],
	"description": "",
	"content": "texttospeech.stop()   Type Function\n  Return value none\n  See also texttospeech.*\n  Overview Stops an ongoing speech.\nSyntax texttospeech.stop(waitForWordEnd) waitForWordEnd optional Boolean. If true, the speech will be interrupted at the word end. Otherwise the speech will be interrupted immediately.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/stopAdvertising/",
	"title": "stopAdvertising",
	"tags": [],
	"description": "",
	"content": "bluetooth.stopAdvertising()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.stopAdvertising( advertisingId )  advertisingId required Userdata.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/stopScan/",
	"title": "stopScan",
	"tags": [],
	"description": "",
	"content": "bluetooth.stopScan()   Type Function Return value none\n  See also bluetooth.*\n  Overview Syntax bluetooth.stopScan()  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/qrscanner/event/show/symbol/",
	"title": "symbol",
	"tags": [],
	"description": "",
	"content": "event.symbol   Type String\n  Event show\n  See also show qrscanner.*\n  Overview String indicates the type of symbol that was scanned. iOS only.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/tag/",
	"title": "tag",
	"tags": [],
	"description": "",
	"content": "event.tag   Type Table\n  Event nfc\n  See also nfc nfc.*\n  Overview Present only when event.type is 'tag'. Holds information about the discovered TAG.\nProperties id String. TAG id value.\ntoString String. Simple string representation of the TAG.\ntechs Array. List of technologies supported by the tag.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/",
	"title": "texttospeech",
	"tags": [],
	"description": "",
	"content": "texttospeech.* — TextToSpeech   Type Library\n  Overview The TextToSpeech plugin enables your applications speak various text in various languages. You can control pitch, rate and volume. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: iOS 7+, Android 4.0.3+, tvOS 7+, macOS 10.3+. Some features require Android 4.0+ and Android 5.0+.\nThe latest version requires Corona 2016.2979 or later.\nSyntax local texttospeech = require(\u0026#39;plugin.texttospeech\u0026#39;) Functions texttospeech.enableDebug() texttospeech.init() texttospeech.getLanguagesAndVoices() texttospeech.speak() texttospeech.isSpeaking() texttospeech.stop() texttospeech.pause() texttospeech.continue() Events init getLanguagesAndVoices onStart onProgress onComplete onPause onContinue Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.texttospeech\u0026#39;] = spiralcodestudio_plugin(\u0026#39;texttospeech\u0026#39;) } } Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-texttospeech\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/timeout/",
	"title": "timeout",
	"tags": [],
	"description": "",
	"content": "event.timeout   Type Number Event advertising\n  See also advertising bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/timestamp/",
	"title": "timestamp",
	"tags": [],
	"description": "",
	"content": "object.timestamp   Type String\n  Platform Android\n  See also vk.*\n  Overview UNIX timestamp of the time when the access token has been created.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/toast/",
	"title": "toast",
	"tags": [],
	"description": "",
	"content": "toast.* — Toast   Type Library\n  Overview The Toast plugin shows non-intrusive in-app notification messages for iOS and Android. A must have for any Corona application. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nToasts are not a part of Corona\u0026rsquo;s OpenGL hierarchy, therefore they don\u0026rsquo;t affect your Corona objects in any way. They just display a message and silently disappear.\nSupported platforms: iOS 7+ and Android 2.3.3+.\nScreenshots Syntax local toast = require(\u0026#39;plugin.toast\u0026#39;) Functions toast.show() Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.toast\u0026#39;] = spiralcodestudio_plugin(\u0026#39;toast\u0026#39;) } } Example toast.show(\u0026#39;Non-intrusive notification message!\u0026#39;) -- OR -- toast.show(\u0026#39;Toast is done!\u0026#39;, {duration = \u0026#39;long\u0026#39;, gravity = \u0026#39;TopCenter\u0026#39;, offset = {0, 128}}) Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-toast\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/flashlight/on/",
	"title": "true",
	"tags": [],
	"description": "",
	"content": "flashlight.on()   Type Function\n  Return value none\n  See also toast.*\n  Overview Turns on the flashlight.\nSyntax flashlight.on() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/event/advertising/txPowerLevel/",
	"title": "txPowerLevel",
	"tags": [],
	"description": "",
	"content": "event.txPowerLevel   Type Number Event advertising\n  See also advertising bluetooth.*\n  Overview Integer.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/type/",
	"title": "type",
	"tags": [],
	"description": "",
	"content": "object.type   Type String\n  See also bluetooth.*\n  Overview \u0026quot;classic\u0026quot;, \u0026quot;low energy\u0026quot;, \u0026quot;dual\u0026quot;, \u0026quot;unknown\u0026quot;.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/nfc/type/",
	"title": "type",
	"tags": [],
	"description": "",
	"content": "event.type   Type String\n  Event nfc\n  See also nfc nfc.*\n  Overview The type of the NFC device. Either 'tag' or 'ndef'.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  Gatt Characteristic Descriptor Server Service  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/mousecursor/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  Cursor  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  NdefMessage  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  Haptic  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  AccessToken Image  "
},
{
	"uri": "http://docs.spiralcodestudio.com/type/",
	"title": "Types",
	"tags": [],
	"description": "",
	"content": "Types  Float Integer  "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/facebook/event/fbapplink/url/",
	"title": "url",
	"tags": [],
	"description": "",
	"content": "event.url   Type String\n  Event fbapplink\n  See also fbapplink facebook.*\n  Overview The url string.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/type/AccessToken/userId/",
	"title": "userId",
	"tags": [],
	"description": "",
	"content": "object.userId   Type String\n  See also vk.*\n  Overview User VK id.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Characteristic/uuid/",
	"title": "uuid",
	"tags": [],
	"description": "",
	"content": "object.uuid   Type String\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Descriptor/uuid/",
	"title": "uuid",
	"tags": [],
	"description": "",
	"content": "object.uuid   Type String\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Service/uuid/",
	"title": "uuid",
	"tags": [],
	"description": "",
	"content": "object.uuid   Type String\n  See also bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Device/uuids/",
	"title": "uuids",
	"tags": [],
	"description": "",
	"content": "object.uuids   Type Array\n  See also bluetooth.*\n  Overview Can be nil.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onCharacteristicWriteRequest/value/",
	"title": "value",
	"tags": [],
	"description": "",
	"content": "event.value   Type String Event onCharacteristicReadRequest\n  See also onCharacteristicReadRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Server/event/onDescriptorWriteRequest/value/",
	"title": "value",
	"tags": [],
	"description": "",
	"content": "event.value   Type String Event onDescriptorWriteRequest\n  See also onDescriptorWriteRequest bluetooth.*\n  Overview "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/vibrate/",
	"title": "vibrate",
	"tags": [],
	"description": "",
	"content": "vibrator.vibrate()   Type Function\n  Return value none\n  See also vibrator.*\n  Overview Vibrates for a specified duration or with a specified pattern.\nSyntax for a simple vibration vibrator.vibrate(duration) duration required Integer. Duration of the vibration in milliseconds.\nSyntax for a pattern vibration vibrator.vibrate(pattern, [repeat]) pattern required Array. An array of integers that are the durations for which to turn on and off the vibrator in milliseconds. The first value indicates the number of milliseconds to wait before turning the vibrator on. The next value indicates the number of milliseconds for which to keep the vibrator on before turning it off. Subsequent values alternate between durations in milliseconds to turn the vibrator off or to turn the vibrator on.\nrepeat optional Integer. To make the pattern repeat, pass the index from the pattern array at which to start the repetition.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vibrator/",
	"title": "vibrator",
	"tags": [],
	"description": "",
	"content": "vibrator.* — Vibrator   Type Library\n  Overview The Vibrator plugin provides you a fine control over vibration ability of Android devices and Taptic Engine in Apple\u0026rsquo;s devices. You can control vibration duration, set a pattern and make it repeat indefinitely. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nOn iOS only iPhone 7 and iPhone 7+ or later are supported.\nSupported platforms: Android 2.3.3+, iOS 10+.\nSyntax local vibrator = require(\u0026#39;plugin.vibrator\u0026#39;) Functions vibrator.hasVibrator() vibrator.vibrate() vibrator.cancel() vibrator.newHaptic() Types Haptic Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.vibrator\u0026#39;] = spiralcodestudio_plugin(\u0026#39;vibrator\u0026#39;) } } Example vibrator.vibrate(1000) -- OR -- vibrator.vibrate({100, 500, 200, 250}, 1) Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-vibrator\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/vk/",
	"title": "vk",
	"tags": [],
	"description": "",
	"content": "vk.* — VK   Type Library\n  Overview The VK plugin provides access to VK.com Social Network. To get access to the plugin, you need to support me on Patreon https://www.patreon.com/lerg\nSupported platforms: iOS 6+, Android 2.3.3+.\nThe latest version requires Corona 2016.2646 or later.\nSyntax local vk = require(\u0026#39;plugin.vk\u0026#39;) Functions vk.enableDebug() vk.init() vk.login() vk.logout() vk.isLoggedIn() vk.getUserId() vk.getAccessToken() vk.request() vk.showShareDialog() Events login request showShareDialog Types AccessToken Image Project Settings To use this plugin, add an entry into the plugins table of build.settings. When added, the build server will integrate the plugin during the build phase.\nYou also need to add a special function at the top of the build.settings file and provide your Patreon email and an access key. The access key you get when you become a patron.\nlocal spiralcodestudio_patreon_email = \u0026#39;YOUR_EMAIL\u0026#39; local spiralcodestudio_key = \u0026#39;YOUR_ACCESS_KEY\u0026#39; local function spiralcodestudio_plugin(name) local plugin = {publisherId = \u0026#39;com.spiralcodestudio\u0026#39;, supportedPlatforms = {}} local platforms = {\u0026#39;android\u0026#39;, \u0026#39;appletvos\u0026#39;, \u0026#39;appletvsimulator\u0026#39;, \u0026#39;iphone\u0026#39;, \u0026#39;iphone-sim\u0026#39;, \u0026#39;mac-sim\u0026#39;, \u0026#39;win32-sim\u0026#39;} for i = 1, #platforms do local platform = platforms[i] plugin.supportedPlatforms[platform] = {url = \u0026#39;https://build.spiralcodestudio.com/\u0026#39; .. spiralcodestudio_patreon_email .. \u0026#39;/\u0026#39; .. spiralcodestudio_key .. \u0026#39;/solar2d/\u0026#39; .. name .. \u0026#39;_\u0026#39; .. platform .. \u0026#39;.tgz\u0026#39;} end return plugin end settings = { plugins = { [\u0026#39;plugin.vk\u0026#39;] = spiralcodestudio_plugin(\u0026#39;vk\u0026#39;) } } In VK dev console (https://vk.com/dev) for your app you have to:\n Set \u0026ldquo;Install Application\u0026rdquo; setting to \u0026ldquo;Required\u0026rdquo;. Add all used permissions to \u0026ldquo;Access Rights\u0026rdquo;. Add \u0026ldquo;App Bundle ID for iOS\u0026rdquo;. Add \u0026ldquo;Package name for Android\u0026rdquo; Set \u0026ldquo;Main activity for Android\u0026rdquo; to \u0026ldquo;com.ansca.corona.CoronaActivity\u0026rdquo; Add \u0026ldquo;Signing certificate fingerprint for Android\u0026rdquo;  Sample Project A sample project can be found here.\nhttps://github.com/Lerg/plugins-sample-vk\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/texttospeech/event/getLanguagesAndVoices/voices/",
	"title": "voices",
	"tags": [],
	"description": "",
	"content": "event.voices   Type Table\n  Event getLanguagesAndVoices\n  See also getLanguagesAndVoices texttospeech.*\n  Overview The list of available voices.\nSample output { [\u0026#39;de-de-x-nfh#male_2-local\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;fr-fr-x-vlf#female_1-local\u0026#39;] = \u0026#39;fr-FR\u0026#39;, [\u0026#39;es-US-language\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;it-it-x-kda-local\u0026#39;] = \u0026#39;it-IT\u0026#39;, [\u0026#39;ko-kr-x-ism#female_2-local\u0026#39;] = \u0026#39;ko-KR\u0026#39;, [\u0026#39;hi-in-x-cfn#male_3-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;fr-fr-x-vlf#female_3-local\u0026#39;] = \u0026#39;fr-FR\u0026#39;, [\u0026#39;en-au-x-afh-network\u0026#39;] = \u0026#39;en-AU\u0026#39;, [\u0026#39;hi-in-x-cfn#male_1-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;hi-in-x-cfn-network\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;sk\u0026#39;] = \u0026#39;sk-\u0026#39;, [\u0026#39;ja-jp-x-htm#male_2-local\u0026#39;] = \u0026#39;ja-JP\u0026#39;, [\u0026#39;fr-BE\u0026#39;] = \u0026#39;fr-BE\u0026#39;, [\u0026#39;ja-jp-x-htm#female_3-local\u0026#39;] = \u0026#39;ja-JP\u0026#39;, [\u0026#39;en-gb-x-fis#male_2-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;pt-PT\u0026#39;] = \u0026#39;pt-PT\u0026#39;, [\u0026#39;ru-RU-language\u0026#39;] = \u0026#39;ru-RU\u0026#39;, [\u0026#39;cs\u0026#39;] = \u0026#39;cs-\u0026#39;, [\u0026#39;bs\u0026#39;] = \u0026#39;bs-\u0026#39;, [\u0026#39;ko-kr-x-ism#male_1-local\u0026#39;] = \u0026#39;ko-KR\u0026#39;, [\u0026#39;bn-BD-language\u0026#39;] = \u0026#39;bn-BD\u0026#39;, [\u0026#39;th-th-x-mol#male_3-local\u0026#39;] = \u0026#39;th-TH\u0026#39;, [\u0026#39;sv-se-x-lfs-local\u0026#39;] = \u0026#39;sv-SE\u0026#39;, [\u0026#39;ru-ru-x-dfc#female_1-local\u0026#39;] = \u0026#39;ru-RU\u0026#39;, [\u0026#39;en-us-x-sfg#male_1-local\u0026#39;] = \u0026#39;en-US\u0026#39;, [\u0026#39;pl-pl-x-oda#male_1-local\u0026#39;] = \u0026#39;pl-PL\u0026#39;, [\u0026#39;sr\u0026#39;] = \u0026#39;sr-\u0026#39;, [\u0026#39;en-gb-x-fis#female_2-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;hu-hu-x-kfl-local\u0026#39;] = \u0026#39;hu-HU\u0026#39;, [\u0026#39;en-gb-x-rjs#male_3-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;ja-jp-x-htm#female_1-local\u0026#39;] = \u0026#39;ja-JP\u0026#39;, [\u0026#39;it-it-x-kda#female_1-local\u0026#39;] = \u0026#39;it-IT\u0026#39;, [\u0026#39;en-in-x-ahp-network\u0026#39;] = \u0026#39;en-IN\u0026#39;, [\u0026#39;en-gb-x-rjs#female_2-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;pl-pl-x-oda-local\u0026#39;] = \u0026#39;pl-PL\u0026#39;, [\u0026#39;hi-in-x-cfn#male_2-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;es-us-x-sfb-local\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;pt-br-x-afs#female_2-local\u0026#39;] = \u0026#39;pt-BR\u0026#39;, [\u0026#39;ru-ru-x-dfc#female_3-local\u0026#39;] = \u0026#39;ru-RU\u0026#39;, [\u0026#39;de-de-x-nfh#male_3-local\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;it-it-x-kda-network\u0026#39;] = \u0026#39;it-IT\u0026#39;, [\u0026#39;id-id-x-dfz#female_1-local\u0026#39;] = \u0026#39;in-ID\u0026#39;, [\u0026#39;th-th-x-mol#male_2-local\u0026#39;] = \u0026#39;th-TH\u0026#39;, [\u0026#39;bn-bd-x-ban-local\u0026#39;] = \u0026#39;bn-BD\u0026#39;, [\u0026#39;ca\u0026#39;] = \u0026#39;ca-\u0026#39;, [\u0026#39;pl-pl-x-oda#male_2-local\u0026#39;] = \u0026#39;pl-PL\u0026#39;, [\u0026#39;ja-JP-language\u0026#39;] = \u0026#39;ja-JP\u0026#39;, [\u0026#39;sq\u0026#39;] = \u0026#39;sq-\u0026#39;, [\u0026#39;zh-CN-language\u0026#39;] = \u0026#39;zh-CN\u0026#39;, [\u0026#39;hi-in-x-cfn#female_2-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;sv-se-x-lfs-network\u0026#39;] = \u0026#39;sv-SE\u0026#39;, [\u0026#39;th-TH-language\u0026#39;] = \u0026#39;th-TH\u0026#39;, [\u0026#39;ko-kr-x-ism#male_2-local\u0026#39;] = \u0026#39;ko-KR\u0026#39;, [\u0026#39;en-gb-x-rjs-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;en-gb-x-rjs-network\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;pt-br-x-afs#female_3-local\u0026#39;] = \u0026#39;pt-BR\u0026#39;, [\u0026#39;cmn-cn-x-ssa-network\u0026#39;] = \u0026#39;zh-CN\u0026#39;, [\u0026#39;es-us-x-sfb#male_1-local\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;it-it-x-kda#female_3-local\u0026#39;] = \u0026#39;it-IT\u0026#39;, [\u0026#39;pt-br-x-afs#female_1-local\u0026#39;] = \u0026#39;pt-BR\u0026#39;, [\u0026#39;en-in-x-cxx-network\u0026#39;] = \u0026#39;en-IN\u0026#39;, [\u0026#39;id-id-x-dfz#female_3-local\u0026#39;] = \u0026#39;in-ID\u0026#39;, [\u0026#39;en-in-x-ahp-local\u0026#39;] = \u0026#39;en-IN\u0026#39;, [\u0026#39;pl-pl-x-oda-network\u0026#39;] = \u0026#39;pl-PL\u0026#39;, [\u0026#39;pt-BR-language\u0026#39;] = \u0026#39;pt-BR\u0026#39;, [\u0026#39;nl-nl-x-tfb-network\u0026#39;] = \u0026#39;nl-NL\u0026#39;, [\u0026#39;yue-HK-language\u0026#39;] = \u0026#39;yue-HK\u0026#39;, [\u0026#39;en-gb-x-fis#male_1-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;nb-no-x-rfj-network\u0026#39;] = \u0026#39;nb-NO\u0026#39;, [\u0026#39;hi-in-x-cfn#female_1-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;it-it-x-kda#female_2-local\u0026#39;] = \u0026#39;it-IT\u0026#39;, [\u0026#39;sv-SE-language\u0026#39;] = \u0026#39;sv-SE\u0026#39;, [\u0026#39;vi-vn-x-gft-network\u0026#39;] = \u0026#39;vi-VN\u0026#39;, [\u0026#39;de-de-x-nfh-network\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;en-gb-x-fis#female_1-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;hr\u0026#39;] = \u0026#39;hr-\u0026#39;, [\u0026#39;nb-no-x-rfj-local\u0026#39;] = \u0026#39;nb-NO\u0026#39;, [\u0026#39;ru-ru-x-dfc#male_1-local\u0026#39;] = \u0026#39;ru-RU\u0026#39;, [\u0026#39;fr-fr-x-vlf#male_3-local\u0026#39;] = \u0026#39;fr-FR\u0026#39;, [\u0026#39;de-de-x-nfh#female_2-local\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;es-us-x-sfb#female_1-local\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;vi-VN-language\u0026#39;] = \u0026#39;vi-VN\u0026#39;, [\u0026#39;bn-bd-x-ban-network\u0026#39;] = \u0026#39;bn-BD\u0026#39;, [\u0026#39;pt-br-x-afs#male_3-local\u0026#39;] = \u0026#39;pt-BR\u0026#39;, [\u0026#39;fr-FR-language\u0026#39;] = \u0026#39;fr-FR\u0026#39;, [\u0026#39;es-us-x-sfb#female_2-local\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;de-DE-language\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;es-us-x-sfb#male_3-local\u0026#39;] = \u0026#39;es-US\u0026#39;, [\u0026#39;hu-HU-language\u0026#39;] = \u0026#39;hu-HU\u0026#39;, [\u0026#39;en-us-x-sfg-network\u0026#39;] = \u0026#39;en-US\u0026#39;, [\u0026#39;fi-fi-x-afi-local\u0026#39;] = \u0026#39;fi-FI\u0026#39;, [\u0026#39;es-es-x-ana-network\u0026#39;] = \u0026#39;es-ES\u0026#39;, [\u0026#39;en-gb-x-fis-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;hi-in-x-cfn#female_3-local\u0026#39;] = \u0026#39;hi-IN\u0026#39;, [\u0026#39;ru-ru-x-dfc-network\u0026#39;] = \u0026#39;ru-RU\u0026#39;, [\u0026#39;en-AU-language\u0026#39;] = \u0026#39;en-AU\u0026#39;, [\u0026#39;da-DK-language\u0026#39;] = \u0026#39;da-DK\u0026#39;, [\u0026#39;zh-TW-language\u0026#39;] = \u0026#39;zh-TW\u0026#39;, [\u0026#39;en-gb-x-fis#male_3-local\u0026#39;] = \u0026#39;en-GB\u0026#39;, [\u0026#39;de-de-x-nfh#female_3-local\u0026#39;] = \u0026#39;de-DE\u0026#39;, [\u0026#39;id-id-x-dfz-local\u0026#39;] = \u0026#39;in-ID\u0026#39;, [\u0026#39;ko-kr-x-ism#female_1-local\u0026#39;] = \u0026#39;ko-KR\u0026#39;, [\u0026#39;en-us-x-sfg#male_2-local\u0026#39;] = \u0026#39;en-US\u0026#39;, } "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/chrometabs/warmup/",
	"title": "warmup",
	"tags": [],
	"description": "",
	"content": "chrometabs.warmup()   Type Function\n  Return value Boolean\n  See also chrometabs.*\n  Overview Preloads some resources for faster browser startup. The plugin must be initialized. Returns true on success.\nSyntax chrometabs.warmup() "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/writeCharacteristic/",
	"title": "writeCharacteristic",
	"tags": [],
	"description": "",
	"content": "object:writeCharacteristic()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:writeCharacteristic( characteristic )  characteristic required Characteristic.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/bluetooth/type/Gatt/writeDescriptor/",
	"title": "writeDescriptor",
	"tags": [],
	"description": "",
	"content": "object:writeDescriptor()   Type Function Return value Boolean\n  See also bluetooth.*\n  Overview Syntax object:writeDescriptor( descriptor )  descriptor required Descriptor.\n"
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/event/writeTag/",
	"title": "writeTag",
	"tags": [],
	"description": "",
	"content": "writeTag   Type Event\n  See also nfc.*\n  Overview Indicates TAG writing operation result.\nProperties event.name event.isError event.errorMessage event.errorCode "
},
{
	"uri": "http://docs.spiralcodestudio.com/plugin/nfc/writeTag/",
	"title": "writeTag",
	"tags": [],
	"description": "",
	"content": "nfc.writeTag()   Type Function\n  Return value none\n  Platform Android only\n  See also nfc.*\n  Overview Writes the provided NDEF message into the recently discovered NFC tag. Therefore call this only after you have discovered a TAG.\nSyntax nfc.writeTag(params) params required Table. Contains parameters for the call — see the next section for details.\nParameter Reference The params table includes parameters for the call.\nmessage required NdefMessage. Contains NDEF message as an array of NDEF records.\ndoNotReleaseTag optional Boolean. If true, the discovered tag won\u0026rsquo;t be released after a successful write operation, so you would be able to write to that tag again if necessary.\n"
}]